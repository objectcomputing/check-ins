micronaut:
  application:
    name: onboardserver
  server:
    cors:
      enabled: true
    max-request-size: 100MB
    multipart:
      max-file-size: 100MB
  session:
    http:
      cookie: true
      header: true
      remember-me: true   
  security:
    enabled: true
    rejectNotFound: false
    token:
      jwt:
        enabled: true
        bearer:
          enabled: true
        cookie:
          enabled: true
        signatures:
          secret:
            generator:
              secret: 1234567890123456789012345678901234567890123456789012345678901234
      propagation:
        header:
          enabled: true
          headerName: "Authorization"
          prefix: "Bearer "
        uri-regex: ".*(geoai\\.app\\/api).*"
        enabled: true
    authentication:
      srp6:
        encryption:
          algorithm: SHA-512
          bitSize: 512
  caches:
    photo-cache:
      expire-after-write: 86400
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      default:
        enabled: true
        mapping: "/**"
        paths:
          - "classpath:public" 

  security:
    enabled: true
    token:
      jwt:
        issuer: https://onboardserver.app
        lease: 36000
        signatures:
          secret:
            enabled: true
            secret: 123456789
            algorithm: HS256
            base64: false
    authentication:
      srp6:
        encryption:
          algorithm: SHA-512
          bitSize: 512
      claims:
        accessorId: accessorId
        accessorSource: accessorSource
  clients:
    auth:
      url: https://onboardserver.app
      read-timeout: 500ms
      retry:
        attempts: 1
        delay: 5s
      endpoints:
        system-challenge:
          path: /api/system/challenge
        system-auth:
          path: /api/system/authenticate
        token-renew:
          path: /api/token/renew
    endpoints:
      logout:
        get-allowed: true
    intercept-url-map:
      -
        pattern: /**
        http-method: GET
        access:
          - isAnonymous()
    session:
      enabled: true
    netty:
      event-loops:
        io:
          num-threads: 3
---
datasources:
  default:
    url: ${JDBC_URL:`jdbc:postgresql:///`}
    driver-class-name: org.postgresql.Driver
    dialect: POSTGRES
    schema-generate: NONE
    maximum-pool-size: 10
---
check-ins:
  application:
    name: "OCI Check-ins"
  web-address: ${ WEB_ADDRESS }
---
mail-jet:
  from_address: ${ FROM_ADDRESS }
  from_name: ${ FROM_NAME }
---
github-credentials:
  github_token: ${ GITHUB_TOKEN }
---
signrequest-credentials:
  signrequest_token: ${SIGNREQUEST_AUTH_TOKEN}
---
onboard:
  authentication:
    srp6:
      encryption:
        algorithm: SHA-512
        bitSize: 512
