// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Menu /> renders correctly 1`] = `
<AppContextProvider
  value={
    Object {
      "state": Object {
        "userProfile": Object {
          "imageUrl": "https://upload.wikimedia.org/wikipedia/commons/7/74/SNL_MrBill_Doll.jpg",
          "memberProfile": Object {
            "pdlId": "",
            "title": "Tester",
            "workEmail": "test@tester.com",
          },
          "name": "holmes",
          "role": Array [
            "MEMBER",
          ],
        },
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        "/guilds",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/guilds",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/guilds",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Menu>
        <div
          className="makeStyles-root-1"
          style={
            Object {
              "paddingRight": "150px",
            }
          }
        >
          <WithStyles(CssBaseline)>
            <CssBaseline
              classes={Object {}}
            />
          </WithStyles(CssBaseline)>
          <WithStyles(ForwardRef(AppBar))
            className="makeStyles-appBar-3"
            position="fixed"
          >
            <ForwardRef(AppBar)
              className="makeStyles-appBar-3"
              classes={
                Object {
                  "colorDefault": "MuiAppBar-colorDefault",
                  "colorInherit": "MuiAppBar-colorInherit",
                  "colorPrimary": "MuiAppBar-colorPrimary",
                  "colorSecondary": "MuiAppBar-colorSecondary",
                  "colorTransparent": "MuiAppBar-colorTransparent",
                  "positionAbsolute": "MuiAppBar-positionAbsolute",
                  "positionFixed": "MuiAppBar-positionFixed",
                  "positionRelative": "MuiAppBar-positionRelative",
                  "positionStatic": "MuiAppBar-positionStatic",
                  "positionSticky": "MuiAppBar-positionSticky",
                  "root": "MuiAppBar-root",
                }
              }
              position="fixed"
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                component="header"
                elevation={4}
                square={true}
              >
                <ForwardRef(Paper)
                  className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <header
                    className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed MuiPaper-elevation4"
                  >
                    <WithStyles(ForwardRef(Toolbar))>
                      <ForwardRef(Toolbar)
                        classes={
                          Object {
                            "dense": "MuiToolbar-dense",
                            "gutters": "MuiToolbar-gutters",
                            "regular": "MuiToolbar-regular",
                            "root": "MuiToolbar-root",
                          }
                        }
                      >
                        <div
                          className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="open drawer"
                            className="makeStyles-menuButton-4"
                            color="inherit"
                            edge="start"
                            onClick={[Function]}
                          >
                            <ForwardRef(IconButton)
                              aria-label="open drawer"
                              className="makeStyles-menuButton-4"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              edge="start"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="open drawer"
                                centerRipple={true}
                                className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="open drawer"
                                  centerRipple={true}
                                  className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <button
                                    aria-label="open drawer"
                                    className="MuiButtonBase-root MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(MenuIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(MenuIcon)>
                                    </span>
                                    <WithStyles(memo)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(Toolbar)>
                    </WithStyles(ForwardRef(Toolbar))>
                    <div
                      aria-haspopup="true"
                      onClick={[Function]}
                    >
                      <WithStyles(ForwardRef(Avatar))
                        onClick={[Function]}
                        src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                        style={
                          Object {
                            "cursor": "pointer",
                            "position": "absolute",
                            "right": "5px",
                            "textDecoration": "none",
                            "top": "10px",
                          }
                        }
                      >
                        <ForwardRef(Avatar)
                          classes={
                            Object {
                              "circle": "MuiAvatar-circle",
                              "circular": "MuiAvatar-circular",
                              "colorDefault": "MuiAvatar-colorDefault",
                              "fallback": "MuiAvatar-fallback",
                              "img": "MuiAvatar-img",
                              "root": "MuiAvatar-root",
                              "rounded": "MuiAvatar-rounded",
                              "square": "MuiAvatar-square",
                            }
                          }
                          onClick={[Function]}
                          src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                          style={
                            Object {
                              "cursor": "pointer",
                              "position": "absolute",
                              "right": "5px",
                              "textDecoration": "none",
                              "top": "10px",
                            }
                          }
                        >
                          <div
                            className="MuiAvatar-root MuiAvatar-circle"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "position": "absolute",
                                "right": "5px",
                                "textDecoration": "none",
                                "top": "10px",
                              }
                            }
                          >
                            <img
                              className="MuiAvatar-img"
                              src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                            />
                          </div>
                        </ForwardRef(Avatar)>
                      </WithStyles(ForwardRef(Avatar))>
                      <WithStyles(ForwardRef(Menu))
                        anchorEl={null}
                        id="simple-menu"
                        keepMounted={true}
                        onClose={[Function]}
                        open={false}
                      >
                        <ForwardRef(Menu)
                          anchorEl={null}
                          classes={
                            Object {
                              "list": "MuiMenu-list",
                              "paper": "MuiMenu-paper",
                            }
                          }
                          id="simple-menu"
                          keepMounted={true}
                          onClose={[Function]}
                          open={false}
                        >
                          <WithStyles(ForwardRef(Popover))
                            PaperProps={
                              Object {
                                "classes": Object {
                                  "root": "MuiMenu-paper",
                                },
                              }
                            }
                            anchorEl={null}
                            anchorOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            getContentAnchorEl={[Function]}
                            id="simple-menu"
                            keepMounted={true}
                            onClose={[Function]}
                            onEntering={[Function]}
                            open={false}
                            transformOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            transitionDuration="auto"
                          >
                            <ForwardRef(Popover)
                              PaperProps={
                                Object {
                                  "classes": Object {
                                    "root": "MuiMenu-paper",
                                  },
                                }
                              }
                              anchorEl={null}
                              anchorOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              classes={
                                Object {
                                  "paper": "MuiPopover-paper",
                                  "root": "MuiPopover-root",
                                }
                              }
                              getContentAnchorEl={[Function]}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              onEntering={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              transitionDuration="auto"
                            >
                              <ForwardRef(Modal)
                                BackdropProps={
                                  Object {
                                    "invisible": true,
                                  }
                                }
                                className="MuiPopover-root"
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <ForwardRef(Portal)
                                  disablePortal={false}
                                >
                                  <Portal
                                    containerInfo={
                                      <body>
                                        <div
                                          aria-hidden="true"
                                          class="MuiPopover-root"
                                          id="simple-menu"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                            tabindex="-1"
                                          >
                                            <ul
                                              class="MuiList-root MuiMenu-list MuiList-padding"
                                              role="menu"
                                              tabindex="-1"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                href="/profile/undefined"
                                                role="menuitem"
                                                tabindex="0"
                                              >
                                                Profile
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                            </ul>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                      </body>
                                    }
                                  >
                                    <div
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      onKeyDown={[Function]}
                                      role="presentation"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "fixed",
                                          "right": 0,
                                          "top": 0,
                                          "visibility": "hidden",
                                          "zIndex": 1300,
                                        }
                                      }
                                    >
                                      <ForwardRef(SimpleBackdrop)
                                        invisible={true}
                                        onClick={[Function]}
                                        open={false}
                                      />
                                      <Unstable_TrapFocus
                                        disableAutoFocus={false}
                                        disableEnforceFocus={false}
                                        disableRestoreFocus={false}
                                        getDoc={[Function]}
                                        isEnabled={[Function]}
                                        open={false}
                                      >
                                        <div
                                          data-test="sentinelStart"
                                          tabIndex={0}
                                        />
                                        <ForwardRef(Grow)
                                          appear={true}
                                          in={false}
                                          onEnter={[Function]}
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          tabIndex="-1"
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={true}
                                            enter={true}
                                            exit={true}
                                            in={false}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            tabIndex="-1"
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <WithStyles(ForwardRef(Paper))
                                              className="MuiPopover-paper"
                                              classes={
                                                Object {
                                                  "root": "MuiMenu-paper",
                                                }
                                              }
                                              elevation={8}
                                              style={
                                                Object {
                                                  "opacity": 0,
                                                  "transform": "scale(0.75, 0.5625)",
                                                  "visibility": "hidden",
                                                }
                                              }
                                              tabIndex="-1"
                                            >
                                              <ForwardRef(Paper)
                                                className="MuiPopover-paper"
                                                classes={
                                                  Object {
                                                    "elevation0": "MuiPaper-elevation0",
                                                    "elevation1": "MuiPaper-elevation1",
                                                    "elevation10": "MuiPaper-elevation10",
                                                    "elevation11": "MuiPaper-elevation11",
                                                    "elevation12": "MuiPaper-elevation12",
                                                    "elevation13": "MuiPaper-elevation13",
                                                    "elevation14": "MuiPaper-elevation14",
                                                    "elevation15": "MuiPaper-elevation15",
                                                    "elevation16": "MuiPaper-elevation16",
                                                    "elevation17": "MuiPaper-elevation17",
                                                    "elevation18": "MuiPaper-elevation18",
                                                    "elevation19": "MuiPaper-elevation19",
                                                    "elevation2": "MuiPaper-elevation2",
                                                    "elevation20": "MuiPaper-elevation20",
                                                    "elevation21": "MuiPaper-elevation21",
                                                    "elevation22": "MuiPaper-elevation22",
                                                    "elevation23": "MuiPaper-elevation23",
                                                    "elevation24": "MuiPaper-elevation24",
                                                    "elevation3": "MuiPaper-elevation3",
                                                    "elevation4": "MuiPaper-elevation4",
                                                    "elevation5": "MuiPaper-elevation5",
                                                    "elevation6": "MuiPaper-elevation6",
                                                    "elevation7": "MuiPaper-elevation7",
                                                    "elevation8": "MuiPaper-elevation8",
                                                    "elevation9": "MuiPaper-elevation9",
                                                    "outlined": "MuiPaper-outlined",
                                                    "root": "MuiPaper-root MuiMenu-paper",
                                                    "rounded": "MuiPaper-rounded",
                                                  }
                                                }
                                                elevation={8}
                                                style={
                                                  Object {
                                                    "opacity": 0,
                                                    "transform": "scale(0.75, 0.5625)",
                                                    "visibility": "hidden",
                                                  }
                                                }
                                                tabIndex="-1"
                                              >
                                                <div
                                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style={
                                                    Object {
                                                      "opacity": 0,
                                                      "transform": "scale(0.75, 0.5625)",
                                                      "visibility": "hidden",
                                                    }
                                                  }
                                                  tabIndex="-1"
                                                >
                                                  <ForwardRef(MenuList)
                                                    actions={
                                                      Object {
                                                        "current": Object {
                                                          "adjustStyleForScrollbar": [Function],
                                                        },
                                                      }
                                                    }
                                                    autoFocus={false}
                                                    autoFocusItem={false}
                                                    className="MuiMenu-list"
                                                    onKeyDown={[Function]}
                                                    variant="selectedMenu"
                                                  >
                                                    <WithStyles(ForwardRef(List))
                                                      className="MuiMenu-list"
                                                      onKeyDown={[Function]}
                                                      role="menu"
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(List)
                                                        className="MuiMenu-list"
                                                        classes={
                                                          Object {
                                                            "dense": "MuiList-dense",
                                                            "padding": "MuiList-padding",
                                                            "root": "MuiList-root",
                                                            "subheader": "MuiList-subheader",
                                                          }
                                                        }
                                                        onKeyDown={[Function]}
                                                        role="menu"
                                                        tabIndex={-1}
                                                      >
                                                        <ul
                                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                                          onKeyDown={[Function]}
                                                          role="menu"
                                                          tabIndex={-1}
                                                        >
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            key=".$.0"
                                                            onClick={[Function]}
                                                            tabIndex={0}
                                                            to="/profile/undefined"
                                                          >
                                                            <ForwardRef(MenuItem)
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiMenuItem-dense",
                                                                  "gutters": "MuiMenuItem-gutters",
                                                                  "root": "MuiMenuItem-root",
                                                                  "selected": "Mui-selected",
                                                                }
                                                              }
                                                              component={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "displayName": "Link",
                                                                  "propTypes": Object {
                                                                    "innerRef": [Function],
                                                                    "onClick": [Function],
                                                                    "replace": [Function],
                                                                    "target": [Function],
                                                                    "to": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                              tabIndex={0}
                                                              to="/profile/undefined"
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiMenuItem-dense",
                                                                  }
                                                                }
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                disableGutters={false}
                                                                onClick={[Function]}
                                                                role="menuitem"
                                                                tabIndex={0}
                                                                to="/profile/undefined"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  disableGutters={false}
                                                                  onClick={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex={0}
                                                                  to="/profile/undefined"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={0}
                                                                    to="/profile/undefined"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                      to="/profile/undefined"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                        to="/profile/undefined"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          href="/profile/undefined"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            href="/profile/undefined"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            Profile
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </ForwardRef(MenuItem)>
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                        </ul>
                                                      </ForwardRef(List)>
                                                    </WithStyles(ForwardRef(List))>
                                                  </ForwardRef(MenuList)>
                                                </div>
                                              </ForwardRef(Paper)>
                                            </WithStyles(ForwardRef(Paper))>
                                          </Transition>
                                        </ForwardRef(Grow)>
                                        <div
                                          data-test="sentinelEnd"
                                          tabIndex={0}
                                        />
                                      </Unstable_TrapFocus>
                                    </div>
                                  </Portal>
                                </ForwardRef(Portal)>
                              </ForwardRef(Modal)>
                            </ForwardRef(Popover)>
                          </WithStyles(ForwardRef(Popover))>
                        </ForwardRef(Menu)>
                      </WithStyles(ForwardRef(Menu))>
                    </div>
                  </header>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(AppBar)>
          </WithStyles(ForwardRef(AppBar))>
          <nav
            className="makeStyles-drawer-2"
          >
            <Hidden
              implementation="css"
              smUp={true}
            >
              <WithStyles(HiddenCss)
                lgDown={false}
                lgUp={false}
                mdDown={false}
                mdUp={false}
                smDown={false}
                smUp={true}
                xlDown={false}
                xlUp={false}
                xsDown={false}
                xsUp={false}
              >
                <HiddenCss
                  classes={
                    Object {
                      "lgDown": "PrivateHiddenCss-lgDown-21",
                      "lgUp": "PrivateHiddenCss-lgUp-20",
                      "mdDown": "PrivateHiddenCss-mdDown-18",
                      "mdUp": "PrivateHiddenCss-mdUp-17",
                      "onlyLg": "PrivateHiddenCss-onlyLg-19",
                      "onlyMd": "PrivateHiddenCss-onlyMd-16",
                      "onlySm": "PrivateHiddenCss-onlySm-13",
                      "onlyXl": "PrivateHiddenCss-onlyXl-22",
                      "onlyXs": "PrivateHiddenCss-onlyXs-10",
                      "smDown": "PrivateHiddenCss-smDown-15",
                      "smUp": "PrivateHiddenCss-smUp-14",
                      "xlDown": "PrivateHiddenCss-xlDown-24",
                      "xlUp": "PrivateHiddenCss-xlUp-23",
                      "xsDown": "PrivateHiddenCss-xsDown-12",
                      "xsUp": "PrivateHiddenCss-xsUp-11",
                    }
                  }
                  lgDown={false}
                  lgUp={false}
                  mdDown={false}
                  mdUp={false}
                  smDown={false}
                  smUp={true}
                  xlDown={false}
                  xlUp={false}
                  xsDown={false}
                  xsUp={false}
                >
                  <div
                    className="PrivateHiddenCss-smUp-14"
                  >
                    <WithStyles(ForwardRef(Drawer))
                      ModalProps={
                        Object {
                          "keepMounted": true,
                        }
                      }
                      anchor="left"
                      classes={
                        Object {
                          "paper": "makeStyles-drawerPaper-5",
                        }
                      }
                      disablePortal={true}
                      onClose={[Function]}
                      open={false}
                      variant="temporary"
                    >
                      <ForwardRef(Drawer)
                        ModalProps={
                          Object {
                            "keepMounted": true,
                          }
                        }
                        anchor="left"
                        classes={
                          Object {
                            "docked": "MuiDrawer-docked",
                            "modal": "MuiDrawer-modal",
                            "paper": "MuiDrawer-paper makeStyles-drawerPaper-5",
                            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                            "root": "MuiDrawer-root",
                          }
                        }
                        disablePortal={true}
                        onClose={[Function]}
                        open={false}
                        variant="temporary"
                      >
                        <ForwardRef(Modal)
                          BackdropComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "invisible": [Function],
                                  "open": [Function],
                                  "transitionDuration": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(Backdrop))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiBackdrop",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          BackdropProps={
                            Object {
                              "transitionDuration": Object {
                                "enter": 225,
                                "exit": 195,
                              },
                            }
                          }
                          className="MuiDrawer-root MuiDrawer-modal"
                          disablePortal={true}
                          keepMounted={true}
                          onClose={[Function]}
                          open={false}
                        >
                          <ForwardRef(Portal)
                            disablePortal={true}
                          >
                            <div
                              className="MuiDrawer-root MuiDrawer-modal"
                              onKeyDown={[Function]}
                              role="presentation"
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                  "visibility": "hidden",
                                  "zIndex": 1300,
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Backdrop))
                                onClick={[Function]}
                                open={false}
                                transitionDuration={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                              >
                                <ForwardRef(Backdrop)
                                  classes={
                                    Object {
                                      "invisible": "MuiBackdrop-invisible",
                                      "root": "MuiBackdrop-root",
                                    }
                                  }
                                  onClick={[Function]}
                                  open={false}
                                  transitionDuration={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <ForwardRef(Fade)
                                    in={false}
                                    onClick={[Function]}
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                  >
                                    <Transition
                                      appear={true}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onClick={[Function]}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                      unmountOnExit={false}
                                    >
                                      <div
                                        aria-hidden={true}
                                        className="MuiBackdrop-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "opacity": 0,
                                            "visibility": "hidden",
                                          }
                                        }
                                      />
                                    </Transition>
                                  </ForwardRef(Fade)>
                                </ForwardRef(Backdrop)>
                              </WithStyles(ForwardRef(Backdrop))>
                              <Unstable_TrapFocus
                                disableAutoFocus={false}
                                disableEnforceFocus={false}
                                disableRestoreFocus={false}
                                getDoc={[Function]}
                                isEnabled={[Function]}
                                open={false}
                              >
                                <div
                                  data-test="sentinelStart"
                                  tabIndex={0}
                                />
                                <ForwardRef(Slide)
                                  appear={false}
                                  direction="right"
                                  in={false}
                                  onEnter={[Function]}
                                  onExited={[Function]}
                                  tabIndex="-1"
                                  timeout={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <Transition
                                    appear={false}
                                    enter={true}
                                    exit={true}
                                    in={false}
                                    mountOnEnter={false}
                                    nodeRef={
                                      Object {
                                        "current": <div
                                          class="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiPaper-elevation16"
                                          style="visibility: hidden; webkit-transform: translateX(-0px); transform: translateX(-0px);"
                                          tabindex="-1"
                                        >
                                          <div>
                                            <div />
                                            <div
                                              style="display: flex; justify-content: center;"
                                            >
                                              <img
                                                alt="Object Computing, Inc."
                                                src="/img/ocicube-white.png"
                                                style="width: 50%;"
                                              />
                                            </div>
                                            <nav
                                              class="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                href="/"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    HOME
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                href="/checkins"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    CHECK-INS
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <div
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    DIRECTORY
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </div>
                                              <div
                                                class="MuiCollapse-container MuiCollapse-entered"
                                                style="min-height: 0px;"
                                              >
                                                <div
                                                  class="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    class="MuiCollapse-wrapperInner"
                                                  >
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                      href="/guilds"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          Guilds
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                      href="/people"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          People
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                      href="/teams"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          Teams
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                  </div>
                                                </div>
                                              </div>
                                            </nav>
                                          </div>
                                        </div>,
                                      }
                                    }
                                    onEnter={[Function]}
                                    onEntered={[Function]}
                                    onEntering={[Function]}
                                    onExit={[Function]}
                                    onExited={[Function]}
                                    onExiting={[Function]}
                                    tabIndex="-1"
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                    unmountOnExit={false}
                                  >
                                    <WithStyles(ForwardRef(Paper))
                                      className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft"
                                      elevation={16}
                                      square={true}
                                      style={
                                        Object {
                                          "visibility": "hidden",
                                        }
                                      }
                                      tabIndex="-1"
                                    >
                                      <ForwardRef(Paper)
                                        className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft"
                                        classes={
                                          Object {
                                            "elevation0": "MuiPaper-elevation0",
                                            "elevation1": "MuiPaper-elevation1",
                                            "elevation10": "MuiPaper-elevation10",
                                            "elevation11": "MuiPaper-elevation11",
                                            "elevation12": "MuiPaper-elevation12",
                                            "elevation13": "MuiPaper-elevation13",
                                            "elevation14": "MuiPaper-elevation14",
                                            "elevation15": "MuiPaper-elevation15",
                                            "elevation16": "MuiPaper-elevation16",
                                            "elevation17": "MuiPaper-elevation17",
                                            "elevation18": "MuiPaper-elevation18",
                                            "elevation19": "MuiPaper-elevation19",
                                            "elevation2": "MuiPaper-elevation2",
                                            "elevation20": "MuiPaper-elevation20",
                                            "elevation21": "MuiPaper-elevation21",
                                            "elevation22": "MuiPaper-elevation22",
                                            "elevation23": "MuiPaper-elevation23",
                                            "elevation24": "MuiPaper-elevation24",
                                            "elevation3": "MuiPaper-elevation3",
                                            "elevation4": "MuiPaper-elevation4",
                                            "elevation5": "MuiPaper-elevation5",
                                            "elevation6": "MuiPaper-elevation6",
                                            "elevation7": "MuiPaper-elevation7",
                                            "elevation8": "MuiPaper-elevation8",
                                            "elevation9": "MuiPaper-elevation9",
                                            "outlined": "MuiPaper-outlined",
                                            "root": "MuiPaper-root",
                                            "rounded": "MuiPaper-rounded",
                                          }
                                        }
                                        elevation={16}
                                        square={true}
                                        style={
                                          Object {
                                            "visibility": "hidden",
                                          }
                                        }
                                        tabIndex="-1"
                                      >
                                        <div
                                          className="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiPaper-elevation16"
                                          style={
                                            Object {
                                              "visibility": "hidden",
                                            }
                                          }
                                          tabIndex="-1"
                                        >
                                          <div>
                                            <div />
                                            <div
                                              style={
                                                Object {
                                                  "display": "flex",
                                                  "justifyContent": "center",
                                                }
                                              }
                                            >
                                              <img
                                                alt="Object Computing, Inc."
                                                src="/img/ocicube-white.png"
                                                style={
                                                  Object {
                                                    "width": "50%",
                                                  }
                                                }
                                              />
                                            </div>
                                            <WithStyles(ForwardRef(List))
                                              className="makeStyles-listStyle-7"
                                              component="nav"
                                            >
                                              <ForwardRef(List)
                                                className="makeStyles-listStyle-7"
                                                classes={
                                                  Object {
                                                    "dense": "MuiList-dense",
                                                    "padding": "MuiList-padding",
                                                    "root": "MuiList-root",
                                                    "subheader": "MuiList-subheader",
                                                  }
                                                }
                                                component="nav"
                                              >
                                                <nav
                                                  className="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className={null}
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "Link",
                                                        "propTypes": Object {
                                                          "innerRef": [Function],
                                                          "onClick": [Function],
                                                          "replace": [Function],
                                                          "target": [Function],
                                                          "to": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    key="/"
                                                    onClick={[Function]}
                                                    selected={false}
                                                    to="/"
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className={null}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      selected={false}
                                                      to="/"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        to="/"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          to="/"
                                                        >
                                                          <Link
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                            to="/"
                                                          >
                                                            <LinkAnchor
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                              href="/"
                                                              navigate={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                                href="/"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ListItemText))
                                                                  classes={null}
                                                                  key=".0"
                                                                  primary="HOME"
                                                                >
                                                                  <ForwardRef(ListItemText)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiListItemText-dense",
                                                                        "inset": "MuiListItemText-inset",
                                                                        "multiline": "MuiListItemText-multiline",
                                                                        "primary": "MuiListItemText-primary",
                                                                        "root": "MuiListItemText-root",
                                                                        "secondary": "MuiListItemText-secondary",
                                                                      }
                                                                    }
                                                                    primary="HOME"
                                                                  >
                                                                    <div
                                                                      className="MuiListItemText-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="MuiListItemText-primary"
                                                                        component="span"
                                                                        display="block"
                                                                        variant="body1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="MuiListItemText-primary"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                              "alignRight": "MuiTypography-alignRight",
                                                                              "body1": "MuiTypography-body1",
                                                                              "body2": "MuiTypography-body2",
                                                                              "button": "MuiTypography-button",
                                                                              "caption": "MuiTypography-caption",
                                                                              "colorError": "MuiTypography-colorError",
                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                              "displayInline": "MuiTypography-displayInline",
                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                              "h1": "MuiTypography-h1",
                                                                              "h2": "MuiTypography-h2",
                                                                              "h3": "MuiTypography-h3",
                                                                              "h4": "MuiTypography-h4",
                                                                              "h5": "MuiTypography-h5",
                                                                              "h6": "MuiTypography-h6",
                                                                              "noWrap": "MuiTypography-noWrap",
                                                                              "overline": "MuiTypography-overline",
                                                                              "paragraph": "MuiTypography-paragraph",
                                                                              "root": "MuiTypography-root",
                                                                              "srOnly": "MuiTypography-srOnly",
                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                            }
                                                                          }
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <span
                                                                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                          >
                                                                            HOME
                                                                          </span>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                    </div>
                                                                  </ForwardRef(ListItemText)>
                                                                </WithStyles(ForwardRef(ListItemText))>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </a>
                                                            </LinkAnchor>
                                                          </Link>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className={null}
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "Link",
                                                        "propTypes": Object {
                                                          "innerRef": [Function],
                                                          "onClick": [Function],
                                                          "replace": [Function],
                                                          "target": [Function],
                                                          "to": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    key="/checkins"
                                                    onClick={[Function]}
                                                    selected={false}
                                                    to="/checkins"
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className={null}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      selected={false}
                                                      to="/checkins"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        to="/checkins"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          to="/checkins"
                                                        >
                                                          <Link
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                            to="/checkins"
                                                          >
                                                            <LinkAnchor
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                              href="/checkins"
                                                              navigate={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                                href="/checkins"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ListItemText))
                                                                  classes={null}
                                                                  key=".0"
                                                                  primary="CHECK-INS"
                                                                >
                                                                  <ForwardRef(ListItemText)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiListItemText-dense",
                                                                        "inset": "MuiListItemText-inset",
                                                                        "multiline": "MuiListItemText-multiline",
                                                                        "primary": "MuiListItemText-primary",
                                                                        "root": "MuiListItemText-root",
                                                                        "secondary": "MuiListItemText-secondary",
                                                                      }
                                                                    }
                                                                    primary="CHECK-INS"
                                                                  >
                                                                    <div
                                                                      className="MuiListItemText-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="MuiListItemText-primary"
                                                                        component="span"
                                                                        display="block"
                                                                        variant="body1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="MuiListItemText-primary"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                              "alignRight": "MuiTypography-alignRight",
                                                                              "body1": "MuiTypography-body1",
                                                                              "body2": "MuiTypography-body2",
                                                                              "button": "MuiTypography-button",
                                                                              "caption": "MuiTypography-caption",
                                                                              "colorError": "MuiTypography-colorError",
                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                              "displayInline": "MuiTypography-displayInline",
                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                              "h1": "MuiTypography-h1",
                                                                              "h2": "MuiTypography-h2",
                                                                              "h3": "MuiTypography-h3",
                                                                              "h4": "MuiTypography-h4",
                                                                              "h5": "MuiTypography-h5",
                                                                              "h6": "MuiTypography-h6",
                                                                              "noWrap": "MuiTypography-noWrap",
                                                                              "overline": "MuiTypography-overline",
                                                                              "paragraph": "MuiTypography-paragraph",
                                                                              "root": "MuiTypography-root",
                                                                              "srOnly": "MuiTypography-srOnly",
                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                            }
                                                                          }
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <span
                                                                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                          >
                                                                            CHECK-INS
                                                                          </span>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                    </div>
                                                                  </ForwardRef(ListItemText)>
                                                                </WithStyles(ForwardRef(ListItemText))>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </a>
                                                            </LinkAnchor>
                                                          </Link>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemText))
                                                              key=".0"
                                                              primary="DIRECTORY"
                                                            >
                                                              <ForwardRef(ListItemText)
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiListItemText-dense",
                                                                    "inset": "MuiListItemText-inset",
                                                                    "multiline": "MuiListItemText-multiline",
                                                                    "primary": "MuiListItemText-primary",
                                                                    "root": "MuiListItemText-root",
                                                                    "secondary": "MuiListItemText-secondary",
                                                                  }
                                                                }
                                                                primary="DIRECTORY"
                                                              >
                                                                <div
                                                                  className="MuiListItemText-root"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    className="MuiListItemText-primary"
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      className="MuiListItemText-primary"
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      display="block"
                                                                      variant="body1"
                                                                    >
                                                                      <span
                                                                        className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                      >
                                                                        DIRECTORY
                                                                      </span>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </ForwardRef(ListItemText)>
                                                            </WithStyles(ForwardRef(ListItemText))>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(Collapse))
                                                    in={true}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <ForwardRef(Collapse)
                                                      classes={
                                                        Object {
                                                          "container": "MuiCollapse-container",
                                                          "entered": "MuiCollapse-entered",
                                                          "hidden": "MuiCollapse-hidden",
                                                          "wrapper": "MuiCollapse-wrapper",
                                                          "wrapperInner": "MuiCollapse-wrapperInner",
                                                        }
                                                      }
                                                      in={true}
                                                      timeout="auto"
                                                      unmountOnExit={true}
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={false}
                                                        enter={true}
                                                        exit={true}
                                                        in={true}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        timeout={null}
                                                        unmountOnExit={true}
                                                      >
                                                        <div
                                                          className="MuiCollapse-container MuiCollapse-entered"
                                                          style={
                                                            Object {
                                                              "minHeight": "0px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiCollapse-wrapper"
                                                          >
                                                            <div
                                                              className="MuiCollapse-wrapperInner"
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/guilds"
                                                                selected={true}
                                                                to="/guilds"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={true}
                                                                  to="/guilds"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/guilds"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/guilds"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/guilds"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                          href="/guilds"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                            href="/guilds"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="Guilds"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="Guilds"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        Guilds
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/people"
                                                                selected={false}
                                                                to="/people"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={false}
                                                                  to="/people"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/people"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/people"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/people"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                          href="/people"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                            href="/people"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="People"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="People"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        People
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/teams"
                                                                selected={false}
                                                                to="/teams"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={false}
                                                                  to="/teams"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/teams"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/teams"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/teams"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                          href="/teams"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                            href="/teams"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="Teams"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="Teams"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        Teams
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      </Transition>
                                                    </ForwardRef(Collapse)>
                                                  </WithStyles(ForwardRef(Collapse))>
                                                </nav>
                                              </ForwardRef(List)>
                                            </WithStyles(ForwardRef(List))>
                                          </div>
                                        </div>
                                      </ForwardRef(Paper)>
                                    </WithStyles(ForwardRef(Paper))>
                                  </Transition>
                                </ForwardRef(Slide)>
                                <div
                                  data-test="sentinelEnd"
                                  tabIndex={0}
                                />
                              </Unstable_TrapFocus>
                            </div>
                          </ForwardRef(Portal)>
                        </ForwardRef(Modal)>
                      </ForwardRef(Drawer)>
                    </WithStyles(ForwardRef(Drawer))>
                  </div>
                </HiddenCss>
              </WithStyles(HiddenCss)>
            </Hidden>
            <Hidden
              implementation="css"
              xsDown={true}
            >
              <WithStyles(HiddenCss)
                lgDown={false}
                lgUp={false}
                mdDown={false}
                mdUp={false}
                smDown={false}
                smUp={false}
                xlDown={false}
                xlUp={false}
                xsDown={true}
                xsUp={false}
              >
                <HiddenCss
                  classes={
                    Object {
                      "lgDown": "PrivateHiddenCss-lgDown-21",
                      "lgUp": "PrivateHiddenCss-lgUp-20",
                      "mdDown": "PrivateHiddenCss-mdDown-18",
                      "mdUp": "PrivateHiddenCss-mdUp-17",
                      "onlyLg": "PrivateHiddenCss-onlyLg-19",
                      "onlyMd": "PrivateHiddenCss-onlyMd-16",
                      "onlySm": "PrivateHiddenCss-onlySm-13",
                      "onlyXl": "PrivateHiddenCss-onlyXl-22",
                      "onlyXs": "PrivateHiddenCss-onlyXs-10",
                      "smDown": "PrivateHiddenCss-smDown-15",
                      "smUp": "PrivateHiddenCss-smUp-14",
                      "xlDown": "PrivateHiddenCss-xlDown-24",
                      "xlUp": "PrivateHiddenCss-xlUp-23",
                      "xsDown": "PrivateHiddenCss-xsDown-12",
                      "xsUp": "PrivateHiddenCss-xsUp-11",
                    }
                  }
                  lgDown={false}
                  lgUp={false}
                  mdDown={false}
                  mdUp={false}
                  smDown={false}
                  smUp={false}
                  xlDown={false}
                  xlUp={false}
                  xsDown={true}
                  xsUp={false}
                >
                  <div
                    className="PrivateHiddenCss-xsDown-12"
                  >
                    <WithStyles(ForwardRef(Drawer))
                      classes={
                        Object {
                          "paper": "makeStyles-drawerPaper-5",
                        }
                      }
                      open={true}
                      variant="permanent"
                    >
                      <ForwardRef(Drawer)
                        classes={
                          Object {
                            "docked": "MuiDrawer-docked",
                            "modal": "MuiDrawer-modal",
                            "paper": "MuiDrawer-paper makeStyles-drawerPaper-5",
                            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                            "root": "MuiDrawer-root",
                          }
                        }
                        open={true}
                        variant="permanent"
                      >
                        <div
                          className="MuiDrawer-root MuiDrawer-docked"
                        >
                          <WithStyles(ForwardRef(Paper))
                            className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                            elevation={0}
                            square={true}
                          >
                            <ForwardRef(Paper)
                              className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              elevation={0}
                              square={true}
                            >
                              <div
                                className="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                              >
                                <div>
                                  <div />
                                  <div
                                    style={
                                      Object {
                                        "display": "flex",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <img
                                      alt="Object Computing, Inc."
                                      src="/img/ocicube-white.png"
                                      style={
                                        Object {
                                          "width": "50%",
                                        }
                                      }
                                    />
                                  </div>
                                  <WithStyles(ForwardRef(List))
                                    className="makeStyles-listStyle-7"
                                    component="nav"
                                  >
                                    <ForwardRef(List)
                                      className="makeStyles-listStyle-7"
                                      classes={
                                        Object {
                                          "dense": "MuiList-dense",
                                          "padding": "MuiList-padding",
                                          "root": "MuiList-root",
                                          "subheader": "MuiList-subheader",
                                        }
                                      }
                                      component="nav"
                                    >
                                      <nav
                                        className="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                      >
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          className={null}
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          key="/"
                                          onClick={[Function]}
                                          selected={false}
                                          to="/"
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            className={null}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onClick={[Function]}
                                            selected={false}
                                            to="/"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              to="/"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                to="/"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  to="/"
                                                >
                                                  <LinkAnchor
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    href="/"
                                                    navigate={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      href="/"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        classes={null}
                                                        key=".0"
                                                        primary="HOME"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="HOME"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  HOME
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          className={null}
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          key="/checkins"
                                          onClick={[Function]}
                                          selected={false}
                                          to="/checkins"
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            className={null}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onClick={[Function]}
                                            selected={false}
                                            to="/checkins"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              to="/checkins"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                to="/checkins"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  to="/checkins"
                                                >
                                                  <LinkAnchor
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    href="/checkins"
                                                    navigate={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      href="/checkins"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        classes={null}
                                                        key=".0"
                                                        primary="CHECK-INS"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="CHECK-INS"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  CHECK-INS
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component="div"
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItemText))
                                                    key=".0"
                                                    primary="DIRECTORY"
                                                  >
                                                    <ForwardRef(ListItemText)
                                                      classes={
                                                        Object {
                                                          "dense": "MuiListItemText-dense",
                                                          "inset": "MuiListItemText-inset",
                                                          "multiline": "MuiListItemText-multiline",
                                                          "primary": "MuiListItemText-primary",
                                                          "root": "MuiListItemText-root",
                                                          "secondary": "MuiListItemText-secondary",
                                                        }
                                                      }
                                                      primary="DIRECTORY"
                                                    >
                                                      <div
                                                        className="MuiListItemText-root"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="MuiListItemText-primary"
                                                          component="span"
                                                          display="block"
                                                          variant="body1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="MuiListItemText-primary"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <span
                                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                            >
                                                              DIRECTORY
                                                            </span>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(ListItemText)>
                                                  </WithStyles(ForwardRef(ListItemText))>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={true}
                                          timeout="auto"
                                          unmountOnExit={true}
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "container": "MuiCollapse-container",
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={true}
                                            timeout="auto"
                                            unmountOnExit={true}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={true}
                                            >
                                              <div
                                                className="MuiCollapse-container MuiCollapse-entered"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/guilds"
                                                      selected={true}
                                                      to="/guilds"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={true}
                                                        to="/guilds"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/guilds"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/guilds"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/guilds"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                href="/guilds"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                  href="/guilds"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="Guilds"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="Guilds"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              Guilds
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/people"
                                                      selected={false}
                                                      to="/people"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={false}
                                                        to="/people"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/people"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/people"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/people"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                href="/people"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                  href="/people"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="People"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="People"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              People
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/teams"
                                                      selected={false}
                                                      to="/teams"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={false}
                                                        to="/teams"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/teams"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/teams"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/teams"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                href="/teams"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                  href="/teams"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="Teams"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="Teams"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              Teams
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </nav>
                                    </ForwardRef(List)>
                                  </WithStyles(ForwardRef(List))>
                                </div>
                              </div>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </div>
                      </ForwardRef(Drawer)>
                    </WithStyles(ForwardRef(Drawer))>
                  </div>
                </HiddenCss>
              </WithStyles(HiddenCss)>
            </Hidden>
            <ForwardRef(Modal)
              onBackdropClick={[Function]}
              onClose={[Function]}
              open={false}
            />
          </nav>
          <main
            className="makeStyles-content-6"
          >
            <div />
          </main>
        </div>
      </Menu>
    </Router>
  </MemoryRouter>
</AppContextProvider>
`;

exports[`<Menu /> renders correctly for admin 1`] = `
<AppContextProvider
  value={
    Object {
      "state": Object {
        "userProfile": Object {
          "imageUrl": "https://upload.wikimedia.org/wikipedia/commons/7/74/SNL_MrBill_Doll.jpg",
          "memberProfile": Object {
            "pdlId": "",
            "title": "Tester",
            "workEmail": "test@tester.com",
          },
          "name": "holmes",
          "role": Array [
            "MEMBER",
            "ADMIN",
          ],
        },
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        "/guilds",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/guilds",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/guilds",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Menu>
        <div
          className="makeStyles-root-1"
          style={
            Object {
              "paddingRight": "150px",
            }
          }
        >
          <WithStyles(CssBaseline)>
            <CssBaseline
              classes={Object {}}
            />
          </WithStyles(CssBaseline)>
          <WithStyles(ForwardRef(AppBar))
            className="makeStyles-appBar-3"
            position="fixed"
          >
            <ForwardRef(AppBar)
              className="makeStyles-appBar-3"
              classes={
                Object {
                  "colorDefault": "MuiAppBar-colorDefault",
                  "colorInherit": "MuiAppBar-colorInherit",
                  "colorPrimary": "MuiAppBar-colorPrimary",
                  "colorSecondary": "MuiAppBar-colorSecondary",
                  "colorTransparent": "MuiAppBar-colorTransparent",
                  "positionAbsolute": "MuiAppBar-positionAbsolute",
                  "positionFixed": "MuiAppBar-positionFixed",
                  "positionRelative": "MuiAppBar-positionRelative",
                  "positionStatic": "MuiAppBar-positionStatic",
                  "positionSticky": "MuiAppBar-positionSticky",
                  "root": "MuiAppBar-root",
                }
              }
              position="fixed"
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                component="header"
                elevation={4}
                square={true}
              >
                <ForwardRef(Paper)
                  className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <header
                    className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed MuiPaper-elevation4"
                  >
                    <WithStyles(ForwardRef(Toolbar))>
                      <ForwardRef(Toolbar)
                        classes={
                          Object {
                            "dense": "MuiToolbar-dense",
                            "gutters": "MuiToolbar-gutters",
                            "regular": "MuiToolbar-regular",
                            "root": "MuiToolbar-root",
                          }
                        }
                      >
                        <div
                          className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="open drawer"
                            className="makeStyles-menuButton-4"
                            color="inherit"
                            edge="start"
                            onClick={[Function]}
                          >
                            <ForwardRef(IconButton)
                              aria-label="open drawer"
                              className="makeStyles-menuButton-4"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              edge="start"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="open drawer"
                                centerRipple={true}
                                className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="open drawer"
                                  centerRipple={true}
                                  className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <button
                                    aria-label="open drawer"
                                    className="MuiButtonBase-root MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(MenuIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(MenuIcon)>
                                    </span>
                                    <WithStyles(memo)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(Toolbar)>
                    </WithStyles(ForwardRef(Toolbar))>
                    <div
                      aria-haspopup="true"
                      onClick={[Function]}
                    >
                      <WithStyles(ForwardRef(Avatar))
                        onClick={[Function]}
                        src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                        style={
                          Object {
                            "cursor": "pointer",
                            "position": "absolute",
                            "right": "5px",
                            "textDecoration": "none",
                            "top": "10px",
                          }
                        }
                      >
                        <ForwardRef(Avatar)
                          classes={
                            Object {
                              "circle": "MuiAvatar-circle",
                              "circular": "MuiAvatar-circular",
                              "colorDefault": "MuiAvatar-colorDefault",
                              "fallback": "MuiAvatar-fallback",
                              "img": "MuiAvatar-img",
                              "root": "MuiAvatar-root",
                              "rounded": "MuiAvatar-rounded",
                              "square": "MuiAvatar-square",
                            }
                          }
                          onClick={[Function]}
                          src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                          style={
                            Object {
                              "cursor": "pointer",
                              "position": "absolute",
                              "right": "5px",
                              "textDecoration": "none",
                              "top": "10px",
                            }
                          }
                        >
                          <div
                            className="MuiAvatar-root MuiAvatar-circle"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "position": "absolute",
                                "right": "5px",
                                "textDecoration": "none",
                                "top": "10px",
                              }
                            }
                          >
                            <img
                              className="MuiAvatar-img"
                              src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                            />
                          </div>
                        </ForwardRef(Avatar)>
                      </WithStyles(ForwardRef(Avatar))>
                      <WithStyles(ForwardRef(Menu))
                        anchorEl={null}
                        id="simple-menu"
                        keepMounted={true}
                        onClose={[Function]}
                        open={false}
                      >
                        <ForwardRef(Menu)
                          anchorEl={null}
                          classes={
                            Object {
                              "list": "MuiMenu-list",
                              "paper": "MuiMenu-paper",
                            }
                          }
                          id="simple-menu"
                          keepMounted={true}
                          onClose={[Function]}
                          open={false}
                        >
                          <WithStyles(ForwardRef(Popover))
                            PaperProps={
                              Object {
                                "classes": Object {
                                  "root": "MuiMenu-paper",
                                },
                              }
                            }
                            anchorEl={null}
                            anchorOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            getContentAnchorEl={[Function]}
                            id="simple-menu"
                            keepMounted={true}
                            onClose={[Function]}
                            onEntering={[Function]}
                            open={false}
                            transformOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            transitionDuration="auto"
                          >
                            <ForwardRef(Popover)
                              PaperProps={
                                Object {
                                  "classes": Object {
                                    "root": "MuiMenu-paper",
                                  },
                                }
                              }
                              anchorEl={null}
                              anchorOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              classes={
                                Object {
                                  "paper": "MuiPopover-paper",
                                  "root": "MuiPopover-root",
                                }
                              }
                              getContentAnchorEl={[Function]}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              onEntering={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              transitionDuration="auto"
                            >
                              <ForwardRef(Modal)
                                BackdropProps={
                                  Object {
                                    "invisible": true,
                                  }
                                }
                                className="MuiPopover-root"
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <ForwardRef(Portal)
                                  disablePortal={false}
                                >
                                  <Portal
                                    containerInfo={
                                      <body>
                                        <div
                                          aria-hidden="true"
                                          class="MuiPopover-root"
                                          id="simple-menu"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                            tabindex="-1"
                                          >
                                            <ul
                                              class="MuiList-root MuiMenu-list MuiList-padding"
                                              role="menu"
                                              tabindex="-1"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                href="/profile/undefined"
                                                role="menuitem"
                                                tabindex="0"
                                              >
                                                Profile
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                            </ul>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                        <div
                                          aria-hidden="true"
                                          class="MuiPopover-root"
                                          id="simple-menu"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                            tabindex="-1"
                                          >
                                            <ul
                                              class="MuiList-root MuiMenu-list MuiList-padding"
                                              role="menu"
                                              tabindex="-1"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                href="/profile/undefined"
                                                role="menuitem"
                                                tabindex="0"
                                              >
                                                Profile
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <li
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                role="menuitem"
                                                tabindex="-1"
                                              >
                                                Upload Hours
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </li>
                                            </ul>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                      </body>
                                    }
                                  >
                                    <div
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      onKeyDown={[Function]}
                                      role="presentation"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "fixed",
                                          "right": 0,
                                          "top": 0,
                                          "visibility": "hidden",
                                          "zIndex": 1300,
                                        }
                                      }
                                    >
                                      <ForwardRef(SimpleBackdrop)
                                        invisible={true}
                                        onClick={[Function]}
                                        open={false}
                                      />
                                      <Unstable_TrapFocus
                                        disableAutoFocus={false}
                                        disableEnforceFocus={false}
                                        disableRestoreFocus={false}
                                        getDoc={[Function]}
                                        isEnabled={[Function]}
                                        open={false}
                                      >
                                        <div
                                          data-test="sentinelStart"
                                          tabIndex={0}
                                        />
                                        <ForwardRef(Grow)
                                          appear={true}
                                          in={false}
                                          onEnter={[Function]}
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          tabIndex="-1"
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={true}
                                            enter={true}
                                            exit={true}
                                            in={false}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            tabIndex="-1"
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <WithStyles(ForwardRef(Paper))
                                              className="MuiPopover-paper"
                                              classes={
                                                Object {
                                                  "root": "MuiMenu-paper",
                                                }
                                              }
                                              elevation={8}
                                              style={
                                                Object {
                                                  "opacity": 0,
                                                  "transform": "scale(0.75, 0.5625)",
                                                  "visibility": "hidden",
                                                }
                                              }
                                              tabIndex="-1"
                                            >
                                              <ForwardRef(Paper)
                                                className="MuiPopover-paper"
                                                classes={
                                                  Object {
                                                    "elevation0": "MuiPaper-elevation0",
                                                    "elevation1": "MuiPaper-elevation1",
                                                    "elevation10": "MuiPaper-elevation10",
                                                    "elevation11": "MuiPaper-elevation11",
                                                    "elevation12": "MuiPaper-elevation12",
                                                    "elevation13": "MuiPaper-elevation13",
                                                    "elevation14": "MuiPaper-elevation14",
                                                    "elevation15": "MuiPaper-elevation15",
                                                    "elevation16": "MuiPaper-elevation16",
                                                    "elevation17": "MuiPaper-elevation17",
                                                    "elevation18": "MuiPaper-elevation18",
                                                    "elevation19": "MuiPaper-elevation19",
                                                    "elevation2": "MuiPaper-elevation2",
                                                    "elevation20": "MuiPaper-elevation20",
                                                    "elevation21": "MuiPaper-elevation21",
                                                    "elevation22": "MuiPaper-elevation22",
                                                    "elevation23": "MuiPaper-elevation23",
                                                    "elevation24": "MuiPaper-elevation24",
                                                    "elevation3": "MuiPaper-elevation3",
                                                    "elevation4": "MuiPaper-elevation4",
                                                    "elevation5": "MuiPaper-elevation5",
                                                    "elevation6": "MuiPaper-elevation6",
                                                    "elevation7": "MuiPaper-elevation7",
                                                    "elevation8": "MuiPaper-elevation8",
                                                    "elevation9": "MuiPaper-elevation9",
                                                    "outlined": "MuiPaper-outlined",
                                                    "root": "MuiPaper-root MuiMenu-paper",
                                                    "rounded": "MuiPaper-rounded",
                                                  }
                                                }
                                                elevation={8}
                                                style={
                                                  Object {
                                                    "opacity": 0,
                                                    "transform": "scale(0.75, 0.5625)",
                                                    "visibility": "hidden",
                                                  }
                                                }
                                                tabIndex="-1"
                                              >
                                                <div
                                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style={
                                                    Object {
                                                      "opacity": 0,
                                                      "transform": "scale(0.75, 0.5625)",
                                                      "visibility": "hidden",
                                                    }
                                                  }
                                                  tabIndex="-1"
                                                >
                                                  <ForwardRef(MenuList)
                                                    actions={
                                                      Object {
                                                        "current": Object {
                                                          "adjustStyleForScrollbar": [Function],
                                                        },
                                                      }
                                                    }
                                                    autoFocus={false}
                                                    autoFocusItem={false}
                                                    className="MuiMenu-list"
                                                    onKeyDown={[Function]}
                                                    variant="selectedMenu"
                                                  >
                                                    <WithStyles(ForwardRef(List))
                                                      className="MuiMenu-list"
                                                      onKeyDown={[Function]}
                                                      role="menu"
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(List)
                                                        className="MuiMenu-list"
                                                        classes={
                                                          Object {
                                                            "dense": "MuiList-dense",
                                                            "padding": "MuiList-padding",
                                                            "root": "MuiList-root",
                                                            "subheader": "MuiList-subheader",
                                                          }
                                                        }
                                                        onKeyDown={[Function]}
                                                        role="menu"
                                                        tabIndex={-1}
                                                      >
                                                        <ul
                                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                                          onKeyDown={[Function]}
                                                          role="menu"
                                                          tabIndex={-1}
                                                        >
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            key=".$.0"
                                                            onClick={[Function]}
                                                            tabIndex={0}
                                                            to="/profile/undefined"
                                                          >
                                                            <ForwardRef(MenuItem)
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiMenuItem-dense",
                                                                  "gutters": "MuiMenuItem-gutters",
                                                                  "root": "MuiMenuItem-root",
                                                                  "selected": "Mui-selected",
                                                                }
                                                              }
                                                              component={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "displayName": "Link",
                                                                  "propTypes": Object {
                                                                    "innerRef": [Function],
                                                                    "onClick": [Function],
                                                                    "replace": [Function],
                                                                    "target": [Function],
                                                                    "to": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                              tabIndex={0}
                                                              to="/profile/undefined"
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiMenuItem-dense",
                                                                  }
                                                                }
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                disableGutters={false}
                                                                onClick={[Function]}
                                                                role="menuitem"
                                                                tabIndex={0}
                                                                to="/profile/undefined"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  disableGutters={false}
                                                                  onClick={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex={0}
                                                                  to="/profile/undefined"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={0}
                                                                    to="/profile/undefined"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                      to="/profile/undefined"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                        to="/profile/undefined"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          href="/profile/undefined"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            href="/profile/undefined"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            Profile
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </ForwardRef(MenuItem)>
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            key=".$.1"
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef(MenuItem)
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiMenuItem-dense",
                                                                  "gutters": "MuiMenuItem-gutters",
                                                                  "root": "MuiMenuItem-root",
                                                                  "selected": "Mui-selected",
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiMenuItem-dense",
                                                                  }
                                                                }
                                                                component="li"
                                                                disableGutters={false}
                                                                onClick={[Function]}
                                                                role="menuitem"
                                                                tabIndex={-1}
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component="li"
                                                                  disableGutters={false}
                                                                  onClick={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex={-1}
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    component="li"
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <li
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        Upload Hours
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </li>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </ForwardRef(MenuItem)>
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                        </ul>
                                                      </ForwardRef(List)>
                                                    </WithStyles(ForwardRef(List))>
                                                  </ForwardRef(MenuList)>
                                                </div>
                                              </ForwardRef(Paper)>
                                            </WithStyles(ForwardRef(Paper))>
                                          </Transition>
                                        </ForwardRef(Grow)>
                                        <div
                                          data-test="sentinelEnd"
                                          tabIndex={0}
                                        />
                                      </Unstable_TrapFocus>
                                    </div>
                                  </Portal>
                                </ForwardRef(Portal)>
                              </ForwardRef(Modal)>
                            </ForwardRef(Popover)>
                          </WithStyles(ForwardRef(Popover))>
                        </ForwardRef(Menu)>
                      </WithStyles(ForwardRef(Menu))>
                    </div>
                  </header>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(AppBar)>
          </WithStyles(ForwardRef(AppBar))>
          <nav
            className="makeStyles-drawer-2"
          >
            <Hidden
              implementation="css"
              smUp={true}
            >
              <WithStyles(HiddenCss)
                lgDown={false}
                lgUp={false}
                mdDown={false}
                mdUp={false}
                smDown={false}
                smUp={true}
                xlDown={false}
                xlUp={false}
                xsDown={false}
                xsUp={false}
              >
                <HiddenCss
                  classes={
                    Object {
                      "lgDown": "PrivateHiddenCss-lgDown-21",
                      "lgUp": "PrivateHiddenCss-lgUp-20",
                      "mdDown": "PrivateHiddenCss-mdDown-18",
                      "mdUp": "PrivateHiddenCss-mdUp-17",
                      "onlyLg": "PrivateHiddenCss-onlyLg-19",
                      "onlyMd": "PrivateHiddenCss-onlyMd-16",
                      "onlySm": "PrivateHiddenCss-onlySm-13",
                      "onlyXl": "PrivateHiddenCss-onlyXl-22",
                      "onlyXs": "PrivateHiddenCss-onlyXs-10",
                      "smDown": "PrivateHiddenCss-smDown-15",
                      "smUp": "PrivateHiddenCss-smUp-14",
                      "xlDown": "PrivateHiddenCss-xlDown-24",
                      "xlUp": "PrivateHiddenCss-xlUp-23",
                      "xsDown": "PrivateHiddenCss-xsDown-12",
                      "xsUp": "PrivateHiddenCss-xsUp-11",
                    }
                  }
                  lgDown={false}
                  lgUp={false}
                  mdDown={false}
                  mdUp={false}
                  smDown={false}
                  smUp={true}
                  xlDown={false}
                  xlUp={false}
                  xsDown={false}
                  xsUp={false}
                >
                  <div
                    className="PrivateHiddenCss-smUp-14"
                  >
                    <WithStyles(ForwardRef(Drawer))
                      ModalProps={
                        Object {
                          "keepMounted": true,
                        }
                      }
                      anchor="left"
                      classes={
                        Object {
                          "paper": "makeStyles-drawerPaper-5",
                        }
                      }
                      disablePortal={true}
                      onClose={[Function]}
                      open={false}
                      variant="temporary"
                    >
                      <ForwardRef(Drawer)
                        ModalProps={
                          Object {
                            "keepMounted": true,
                          }
                        }
                        anchor="left"
                        classes={
                          Object {
                            "docked": "MuiDrawer-docked",
                            "modal": "MuiDrawer-modal",
                            "paper": "MuiDrawer-paper makeStyles-drawerPaper-5",
                            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                            "root": "MuiDrawer-root",
                          }
                        }
                        disablePortal={true}
                        onClose={[Function]}
                        open={false}
                        variant="temporary"
                      >
                        <ForwardRef(Modal)
                          BackdropComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "invisible": [Function],
                                  "open": [Function],
                                  "transitionDuration": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(Backdrop))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiBackdrop",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          BackdropProps={
                            Object {
                              "transitionDuration": Object {
                                "enter": 225,
                                "exit": 195,
                              },
                            }
                          }
                          className="MuiDrawer-root MuiDrawer-modal"
                          disablePortal={true}
                          keepMounted={true}
                          onClose={[Function]}
                          open={false}
                        >
                          <ForwardRef(Portal)
                            disablePortal={true}
                          >
                            <div
                              className="MuiDrawer-root MuiDrawer-modal"
                              onKeyDown={[Function]}
                              role="presentation"
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                  "visibility": "hidden",
                                  "zIndex": 1300,
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Backdrop))
                                onClick={[Function]}
                                open={false}
                                transitionDuration={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                              >
                                <ForwardRef(Backdrop)
                                  classes={
                                    Object {
                                      "invisible": "MuiBackdrop-invisible",
                                      "root": "MuiBackdrop-root",
                                    }
                                  }
                                  onClick={[Function]}
                                  open={false}
                                  transitionDuration={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <ForwardRef(Fade)
                                    in={false}
                                    onClick={[Function]}
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                  >
                                    <Transition
                                      appear={true}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onClick={[Function]}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                      unmountOnExit={false}
                                    >
                                      <div
                                        aria-hidden={true}
                                        className="MuiBackdrop-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "opacity": 0,
                                            "visibility": "hidden",
                                          }
                                        }
                                      />
                                    </Transition>
                                  </ForwardRef(Fade)>
                                </ForwardRef(Backdrop)>
                              </WithStyles(ForwardRef(Backdrop))>
                              <Unstable_TrapFocus
                                disableAutoFocus={false}
                                disableEnforceFocus={false}
                                disableRestoreFocus={false}
                                getDoc={[Function]}
                                isEnabled={[Function]}
                                open={false}
                              >
                                <div
                                  data-test="sentinelStart"
                                  tabIndex={0}
                                />
                                <ForwardRef(Slide)
                                  appear={false}
                                  direction="right"
                                  in={false}
                                  onEnter={[Function]}
                                  onExited={[Function]}
                                  tabIndex="-1"
                                  timeout={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <Transition
                                    appear={false}
                                    enter={true}
                                    exit={true}
                                    in={false}
                                    mountOnEnter={false}
                                    nodeRef={
                                      Object {
                                        "current": <div
                                          class="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiPaper-elevation16"
                                          style="visibility: hidden; webkit-transform: translateX(-0px); transform: translateX(-0px);"
                                          tabindex="-1"
                                        >
                                          <div>
                                            <div />
                                            <div
                                              style="display: flex; justify-content: center;"
                                            >
                                              <img
                                                alt="Object Computing, Inc."
                                                src="/img/ocicube-white.png"
                                                style="width: 50%;"
                                              />
                                            </div>
                                            <nav
                                              class="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                href="/"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    HOME
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <div
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    ADMIN
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </div>
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                href="/checkins"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    CHECK-INS
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <div
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    DIRECTORY
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </div>
                                              <div
                                                class="MuiCollapse-container MuiCollapse-entered"
                                                style="min-height: 0px;"
                                              >
                                                <div
                                                  class="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    class="MuiCollapse-wrapperInner"
                                                  >
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                      href="/guilds"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          Guilds
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                      href="/people"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          People
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                      href="/teams"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          Teams
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                  </div>
                                                </div>
                                              </div>
                                              <div
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    FEEDBACK
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </div>
                                              <div
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    REPORTS
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </div>
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                href="/edit-skills"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    SKILLS
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                            </nav>
                                          </div>
                                        </div>,
                                      }
                                    }
                                    onEnter={[Function]}
                                    onEntered={[Function]}
                                    onEntering={[Function]}
                                    onExit={[Function]}
                                    onExited={[Function]}
                                    onExiting={[Function]}
                                    tabIndex="-1"
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                    unmountOnExit={false}
                                  >
                                    <WithStyles(ForwardRef(Paper))
                                      className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft"
                                      elevation={16}
                                      square={true}
                                      style={
                                        Object {
                                          "visibility": "hidden",
                                        }
                                      }
                                      tabIndex="-1"
                                    >
                                      <ForwardRef(Paper)
                                        className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft"
                                        classes={
                                          Object {
                                            "elevation0": "MuiPaper-elevation0",
                                            "elevation1": "MuiPaper-elevation1",
                                            "elevation10": "MuiPaper-elevation10",
                                            "elevation11": "MuiPaper-elevation11",
                                            "elevation12": "MuiPaper-elevation12",
                                            "elevation13": "MuiPaper-elevation13",
                                            "elevation14": "MuiPaper-elevation14",
                                            "elevation15": "MuiPaper-elevation15",
                                            "elevation16": "MuiPaper-elevation16",
                                            "elevation17": "MuiPaper-elevation17",
                                            "elevation18": "MuiPaper-elevation18",
                                            "elevation19": "MuiPaper-elevation19",
                                            "elevation2": "MuiPaper-elevation2",
                                            "elevation20": "MuiPaper-elevation20",
                                            "elevation21": "MuiPaper-elevation21",
                                            "elevation22": "MuiPaper-elevation22",
                                            "elevation23": "MuiPaper-elevation23",
                                            "elevation24": "MuiPaper-elevation24",
                                            "elevation3": "MuiPaper-elevation3",
                                            "elevation4": "MuiPaper-elevation4",
                                            "elevation5": "MuiPaper-elevation5",
                                            "elevation6": "MuiPaper-elevation6",
                                            "elevation7": "MuiPaper-elevation7",
                                            "elevation8": "MuiPaper-elevation8",
                                            "elevation9": "MuiPaper-elevation9",
                                            "outlined": "MuiPaper-outlined",
                                            "root": "MuiPaper-root",
                                            "rounded": "MuiPaper-rounded",
                                          }
                                        }
                                        elevation={16}
                                        square={true}
                                        style={
                                          Object {
                                            "visibility": "hidden",
                                          }
                                        }
                                        tabIndex="-1"
                                      >
                                        <div
                                          className="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiPaper-elevation16"
                                          style={
                                            Object {
                                              "visibility": "hidden",
                                            }
                                          }
                                          tabIndex="-1"
                                        >
                                          <div>
                                            <div />
                                            <div
                                              style={
                                                Object {
                                                  "display": "flex",
                                                  "justifyContent": "center",
                                                }
                                              }
                                            >
                                              <img
                                                alt="Object Computing, Inc."
                                                src="/img/ocicube-white.png"
                                                style={
                                                  Object {
                                                    "width": "50%",
                                                  }
                                                }
                                              />
                                            </div>
                                            <WithStyles(ForwardRef(List))
                                              className="makeStyles-listStyle-7"
                                              component="nav"
                                            >
                                              <ForwardRef(List)
                                                className="makeStyles-listStyle-7"
                                                classes={
                                                  Object {
                                                    "dense": "MuiList-dense",
                                                    "padding": "MuiList-padding",
                                                    "root": "MuiList-root",
                                                    "subheader": "MuiList-subheader",
                                                  }
                                                }
                                                component="nav"
                                              >
                                                <nav
                                                  className="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className={null}
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "Link",
                                                        "propTypes": Object {
                                                          "innerRef": [Function],
                                                          "onClick": [Function],
                                                          "replace": [Function],
                                                          "target": [Function],
                                                          "to": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    key="/"
                                                    onClick={[Function]}
                                                    selected={false}
                                                    to="/"
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className={null}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      selected={false}
                                                      to="/"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        to="/"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          to="/"
                                                        >
                                                          <Link
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                            to="/"
                                                          >
                                                            <LinkAnchor
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                              href="/"
                                                              navigate={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                                href="/"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ListItemText))
                                                                  classes={null}
                                                                  key=".0"
                                                                  primary="HOME"
                                                                >
                                                                  <ForwardRef(ListItemText)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiListItemText-dense",
                                                                        "inset": "MuiListItemText-inset",
                                                                        "multiline": "MuiListItemText-multiline",
                                                                        "primary": "MuiListItemText-primary",
                                                                        "root": "MuiListItemText-root",
                                                                        "secondary": "MuiListItemText-secondary",
                                                                      }
                                                                    }
                                                                    primary="HOME"
                                                                  >
                                                                    <div
                                                                      className="MuiListItemText-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="MuiListItemText-primary"
                                                                        component="span"
                                                                        display="block"
                                                                        variant="body1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="MuiListItemText-primary"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                              "alignRight": "MuiTypography-alignRight",
                                                                              "body1": "MuiTypography-body1",
                                                                              "body2": "MuiTypography-body2",
                                                                              "button": "MuiTypography-button",
                                                                              "caption": "MuiTypography-caption",
                                                                              "colorError": "MuiTypography-colorError",
                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                              "displayInline": "MuiTypography-displayInline",
                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                              "h1": "MuiTypography-h1",
                                                                              "h2": "MuiTypography-h2",
                                                                              "h3": "MuiTypography-h3",
                                                                              "h4": "MuiTypography-h4",
                                                                              "h5": "MuiTypography-h5",
                                                                              "h6": "MuiTypography-h6",
                                                                              "noWrap": "MuiTypography-noWrap",
                                                                              "overline": "MuiTypography-overline",
                                                                              "paragraph": "MuiTypography-paragraph",
                                                                              "root": "MuiTypography-root",
                                                                              "srOnly": "MuiTypography-srOnly",
                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                            }
                                                                          }
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <span
                                                                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                          >
                                                                            HOME
                                                                          </span>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                    </div>
                                                                  </ForwardRef(ListItemText)>
                                                                </WithStyles(ForwardRef(ListItemText))>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </a>
                                                            </LinkAnchor>
                                                          </Link>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemText))
                                                              key=".0"
                                                              primary="ADMIN"
                                                            >
                                                              <ForwardRef(ListItemText)
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiListItemText-dense",
                                                                    "inset": "MuiListItemText-inset",
                                                                    "multiline": "MuiListItemText-multiline",
                                                                    "primary": "MuiListItemText-primary",
                                                                    "root": "MuiListItemText-root",
                                                                    "secondary": "MuiListItemText-secondary",
                                                                  }
                                                                }
                                                                primary="ADMIN"
                                                              >
                                                                <div
                                                                  className="MuiListItemText-root"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    className="MuiListItemText-primary"
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      className="MuiListItemText-primary"
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      display="block"
                                                                      variant="body1"
                                                                    >
                                                                      <span
                                                                        className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                      >
                                                                        ADMIN
                                                                      </span>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </ForwardRef(ListItemText)>
                                                            </WithStyles(ForwardRef(ListItemText))>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(Collapse))
                                                    in={false}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <ForwardRef(Collapse)
                                                      classes={
                                                        Object {
                                                          "container": "MuiCollapse-container",
                                                          "entered": "MuiCollapse-entered",
                                                          "hidden": "MuiCollapse-hidden",
                                                          "wrapper": "MuiCollapse-wrapper",
                                                          "wrapperInner": "MuiCollapse-wrapperInner",
                                                        }
                                                      }
                                                      in={false}
                                                      timeout="auto"
                                                      unmountOnExit={true}
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={false}
                                                        enter={true}
                                                        exit={true}
                                                        in={false}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        timeout={null}
                                                        unmountOnExit={true}
                                                      />
                                                    </ForwardRef(Collapse)>
                                                  </WithStyles(ForwardRef(Collapse))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className={null}
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "Link",
                                                        "propTypes": Object {
                                                          "innerRef": [Function],
                                                          "onClick": [Function],
                                                          "replace": [Function],
                                                          "target": [Function],
                                                          "to": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    key="/checkins"
                                                    onClick={[Function]}
                                                    selected={false}
                                                    to="/checkins"
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className={null}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      selected={false}
                                                      to="/checkins"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        to="/checkins"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          to="/checkins"
                                                        >
                                                          <Link
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                            to="/checkins"
                                                          >
                                                            <LinkAnchor
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                              href="/checkins"
                                                              navigate={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                                href="/checkins"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ListItemText))
                                                                  classes={null}
                                                                  key=".0"
                                                                  primary="CHECK-INS"
                                                                >
                                                                  <ForwardRef(ListItemText)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiListItemText-dense",
                                                                        "inset": "MuiListItemText-inset",
                                                                        "multiline": "MuiListItemText-multiline",
                                                                        "primary": "MuiListItemText-primary",
                                                                        "root": "MuiListItemText-root",
                                                                        "secondary": "MuiListItemText-secondary",
                                                                      }
                                                                    }
                                                                    primary="CHECK-INS"
                                                                  >
                                                                    <div
                                                                      className="MuiListItemText-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="MuiListItemText-primary"
                                                                        component="span"
                                                                        display="block"
                                                                        variant="body1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="MuiListItemText-primary"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                              "alignRight": "MuiTypography-alignRight",
                                                                              "body1": "MuiTypography-body1",
                                                                              "body2": "MuiTypography-body2",
                                                                              "button": "MuiTypography-button",
                                                                              "caption": "MuiTypography-caption",
                                                                              "colorError": "MuiTypography-colorError",
                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                              "displayInline": "MuiTypography-displayInline",
                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                              "h1": "MuiTypography-h1",
                                                                              "h2": "MuiTypography-h2",
                                                                              "h3": "MuiTypography-h3",
                                                                              "h4": "MuiTypography-h4",
                                                                              "h5": "MuiTypography-h5",
                                                                              "h6": "MuiTypography-h6",
                                                                              "noWrap": "MuiTypography-noWrap",
                                                                              "overline": "MuiTypography-overline",
                                                                              "paragraph": "MuiTypography-paragraph",
                                                                              "root": "MuiTypography-root",
                                                                              "srOnly": "MuiTypography-srOnly",
                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                            }
                                                                          }
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <span
                                                                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                          >
                                                                            CHECK-INS
                                                                          </span>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                    </div>
                                                                  </ForwardRef(ListItemText)>
                                                                </WithStyles(ForwardRef(ListItemText))>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </a>
                                                            </LinkAnchor>
                                                          </Link>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemText))
                                                              key=".0"
                                                              primary="DIRECTORY"
                                                            >
                                                              <ForwardRef(ListItemText)
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiListItemText-dense",
                                                                    "inset": "MuiListItemText-inset",
                                                                    "multiline": "MuiListItemText-multiline",
                                                                    "primary": "MuiListItemText-primary",
                                                                    "root": "MuiListItemText-root",
                                                                    "secondary": "MuiListItemText-secondary",
                                                                  }
                                                                }
                                                                primary="DIRECTORY"
                                                              >
                                                                <div
                                                                  className="MuiListItemText-root"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    className="MuiListItemText-primary"
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      className="MuiListItemText-primary"
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      display="block"
                                                                      variant="body1"
                                                                    >
                                                                      <span
                                                                        className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                      >
                                                                        DIRECTORY
                                                                      </span>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </ForwardRef(ListItemText)>
                                                            </WithStyles(ForwardRef(ListItemText))>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(Collapse))
                                                    in={true}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <ForwardRef(Collapse)
                                                      classes={
                                                        Object {
                                                          "container": "MuiCollapse-container",
                                                          "entered": "MuiCollapse-entered",
                                                          "hidden": "MuiCollapse-hidden",
                                                          "wrapper": "MuiCollapse-wrapper",
                                                          "wrapperInner": "MuiCollapse-wrapperInner",
                                                        }
                                                      }
                                                      in={true}
                                                      timeout="auto"
                                                      unmountOnExit={true}
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={false}
                                                        enter={true}
                                                        exit={true}
                                                        in={true}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        timeout={null}
                                                        unmountOnExit={true}
                                                      >
                                                        <div
                                                          className="MuiCollapse-container MuiCollapse-entered"
                                                          style={
                                                            Object {
                                                              "minHeight": "0px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiCollapse-wrapper"
                                                          >
                                                            <div
                                                              className="MuiCollapse-wrapperInner"
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/guilds"
                                                                selected={true}
                                                                to="/guilds"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={true}
                                                                  to="/guilds"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/guilds"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/guilds"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/guilds"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                          href="/guilds"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                            href="/guilds"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="Guilds"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="Guilds"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        Guilds
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/people"
                                                                selected={false}
                                                                to="/people"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={false}
                                                                  to="/people"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/people"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/people"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/people"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                          href="/people"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                            href="/people"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="People"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="People"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        People
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/teams"
                                                                selected={false}
                                                                to="/teams"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={false}
                                                                  to="/teams"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/teams"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/teams"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/teams"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                          href="/teams"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                            href="/teams"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="Teams"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="Teams"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        Teams
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      </Transition>
                                                    </ForwardRef(Collapse)>
                                                  </WithStyles(ForwardRef(Collapse))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemText))
                                                              key=".0"
                                                              primary="FEEDBACK"
                                                            >
                                                              <ForwardRef(ListItemText)
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiListItemText-dense",
                                                                    "inset": "MuiListItemText-inset",
                                                                    "multiline": "MuiListItemText-multiline",
                                                                    "primary": "MuiListItemText-primary",
                                                                    "root": "MuiListItemText-root",
                                                                    "secondary": "MuiListItemText-secondary",
                                                                  }
                                                                }
                                                                primary="FEEDBACK"
                                                              >
                                                                <div
                                                                  className="MuiListItemText-root"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    className="MuiListItemText-primary"
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      className="MuiListItemText-primary"
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      display="block"
                                                                      variant="body1"
                                                                    >
                                                                      <span
                                                                        className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                      >
                                                                        FEEDBACK
                                                                      </span>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </ForwardRef(ListItemText)>
                                                            </WithStyles(ForwardRef(ListItemText))>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(Collapse))
                                                    in={false}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <ForwardRef(Collapse)
                                                      classes={
                                                        Object {
                                                          "container": "MuiCollapse-container",
                                                          "entered": "MuiCollapse-entered",
                                                          "hidden": "MuiCollapse-hidden",
                                                          "wrapper": "MuiCollapse-wrapper",
                                                          "wrapperInner": "MuiCollapse-wrapperInner",
                                                        }
                                                      }
                                                      in={false}
                                                      timeout="auto"
                                                      unmountOnExit={true}
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={false}
                                                        enter={true}
                                                        exit={true}
                                                        in={false}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        timeout={null}
                                                        unmountOnExit={true}
                                                      />
                                                    </ForwardRef(Collapse)>
                                                  </WithStyles(ForwardRef(Collapse))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemText))
                                                              key=".0"
                                                              primary="REPORTS"
                                                            >
                                                              <ForwardRef(ListItemText)
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiListItemText-dense",
                                                                    "inset": "MuiListItemText-inset",
                                                                    "multiline": "MuiListItemText-multiline",
                                                                    "primary": "MuiListItemText-primary",
                                                                    "root": "MuiListItemText-root",
                                                                    "secondary": "MuiListItemText-secondary",
                                                                  }
                                                                }
                                                                primary="REPORTS"
                                                              >
                                                                <div
                                                                  className="MuiListItemText-root"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    className="MuiListItemText-primary"
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      className="MuiListItemText-primary"
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      display="block"
                                                                      variant="body1"
                                                                    >
                                                                      <span
                                                                        className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                      >
                                                                        REPORTS
                                                                      </span>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </ForwardRef(ListItemText)>
                                                            </WithStyles(ForwardRef(ListItemText))>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(Collapse))
                                                    in={false}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <ForwardRef(Collapse)
                                                      classes={
                                                        Object {
                                                          "container": "MuiCollapse-container",
                                                          "entered": "MuiCollapse-entered",
                                                          "hidden": "MuiCollapse-hidden",
                                                          "wrapper": "MuiCollapse-wrapper",
                                                          "wrapperInner": "MuiCollapse-wrapperInner",
                                                        }
                                                      }
                                                      in={false}
                                                      timeout="auto"
                                                      unmountOnExit={true}
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={false}
                                                        enter={true}
                                                        exit={true}
                                                        in={false}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        timeout={null}
                                                        unmountOnExit={true}
                                                      />
                                                    </ForwardRef(Collapse)>
                                                  </WithStyles(ForwardRef(Collapse))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className={null}
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "Link",
                                                        "propTypes": Object {
                                                          "innerRef": [Function],
                                                          "onClick": [Function],
                                                          "replace": [Function],
                                                          "target": [Function],
                                                          "to": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    key="/edit-skills"
                                                    onClick={[Function]}
                                                    selected={false}
                                                    to="/edit-skills"
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className={null}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      selected={false}
                                                      to="/edit-skills"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        to="/edit-skills"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          to="/edit-skills"
                                                        >
                                                          <Link
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                            to="/edit-skills"
                                                          >
                                                            <LinkAnchor
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                              href="/edit-skills"
                                                              navigate={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                                href="/edit-skills"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ListItemText))
                                                                  classes={null}
                                                                  key=".0"
                                                                  primary="SKILLS"
                                                                >
                                                                  <ForwardRef(ListItemText)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiListItemText-dense",
                                                                        "inset": "MuiListItemText-inset",
                                                                        "multiline": "MuiListItemText-multiline",
                                                                        "primary": "MuiListItemText-primary",
                                                                        "root": "MuiListItemText-root",
                                                                        "secondary": "MuiListItemText-secondary",
                                                                      }
                                                                    }
                                                                    primary="SKILLS"
                                                                  >
                                                                    <div
                                                                      className="MuiListItemText-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="MuiListItemText-primary"
                                                                        component="span"
                                                                        display="block"
                                                                        variant="body1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="MuiListItemText-primary"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                              "alignRight": "MuiTypography-alignRight",
                                                                              "body1": "MuiTypography-body1",
                                                                              "body2": "MuiTypography-body2",
                                                                              "button": "MuiTypography-button",
                                                                              "caption": "MuiTypography-caption",
                                                                              "colorError": "MuiTypography-colorError",
                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                              "displayInline": "MuiTypography-displayInline",
                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                              "h1": "MuiTypography-h1",
                                                                              "h2": "MuiTypography-h2",
                                                                              "h3": "MuiTypography-h3",
                                                                              "h4": "MuiTypography-h4",
                                                                              "h5": "MuiTypography-h5",
                                                                              "h6": "MuiTypography-h6",
                                                                              "noWrap": "MuiTypography-noWrap",
                                                                              "overline": "MuiTypography-overline",
                                                                              "paragraph": "MuiTypography-paragraph",
                                                                              "root": "MuiTypography-root",
                                                                              "srOnly": "MuiTypography-srOnly",
                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                            }
                                                                          }
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <span
                                                                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                          >
                                                                            SKILLS
                                                                          </span>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                    </div>
                                                                  </ForwardRef(ListItemText)>
                                                                </WithStyles(ForwardRef(ListItemText))>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </a>
                                                            </LinkAnchor>
                                                          </Link>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                </nav>
                                              </ForwardRef(List)>
                                            </WithStyles(ForwardRef(List))>
                                          </div>
                                        </div>
                                      </ForwardRef(Paper)>
                                    </WithStyles(ForwardRef(Paper))>
                                  </Transition>
                                </ForwardRef(Slide)>
                                <div
                                  data-test="sentinelEnd"
                                  tabIndex={0}
                                />
                              </Unstable_TrapFocus>
                            </div>
                          </ForwardRef(Portal)>
                        </ForwardRef(Modal)>
                      </ForwardRef(Drawer)>
                    </WithStyles(ForwardRef(Drawer))>
                  </div>
                </HiddenCss>
              </WithStyles(HiddenCss)>
            </Hidden>
            <Hidden
              implementation="css"
              xsDown={true}
            >
              <WithStyles(HiddenCss)
                lgDown={false}
                lgUp={false}
                mdDown={false}
                mdUp={false}
                smDown={false}
                smUp={false}
                xlDown={false}
                xlUp={false}
                xsDown={true}
                xsUp={false}
              >
                <HiddenCss
                  classes={
                    Object {
                      "lgDown": "PrivateHiddenCss-lgDown-21",
                      "lgUp": "PrivateHiddenCss-lgUp-20",
                      "mdDown": "PrivateHiddenCss-mdDown-18",
                      "mdUp": "PrivateHiddenCss-mdUp-17",
                      "onlyLg": "PrivateHiddenCss-onlyLg-19",
                      "onlyMd": "PrivateHiddenCss-onlyMd-16",
                      "onlySm": "PrivateHiddenCss-onlySm-13",
                      "onlyXl": "PrivateHiddenCss-onlyXl-22",
                      "onlyXs": "PrivateHiddenCss-onlyXs-10",
                      "smDown": "PrivateHiddenCss-smDown-15",
                      "smUp": "PrivateHiddenCss-smUp-14",
                      "xlDown": "PrivateHiddenCss-xlDown-24",
                      "xlUp": "PrivateHiddenCss-xlUp-23",
                      "xsDown": "PrivateHiddenCss-xsDown-12",
                      "xsUp": "PrivateHiddenCss-xsUp-11",
                    }
                  }
                  lgDown={false}
                  lgUp={false}
                  mdDown={false}
                  mdUp={false}
                  smDown={false}
                  smUp={false}
                  xlDown={false}
                  xlUp={false}
                  xsDown={true}
                  xsUp={false}
                >
                  <div
                    className="PrivateHiddenCss-xsDown-12"
                  >
                    <WithStyles(ForwardRef(Drawer))
                      classes={
                        Object {
                          "paper": "makeStyles-drawerPaper-5",
                        }
                      }
                      open={true}
                      variant="permanent"
                    >
                      <ForwardRef(Drawer)
                        classes={
                          Object {
                            "docked": "MuiDrawer-docked",
                            "modal": "MuiDrawer-modal",
                            "paper": "MuiDrawer-paper makeStyles-drawerPaper-5",
                            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                            "root": "MuiDrawer-root",
                          }
                        }
                        open={true}
                        variant="permanent"
                      >
                        <div
                          className="MuiDrawer-root MuiDrawer-docked"
                        >
                          <WithStyles(ForwardRef(Paper))
                            className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                            elevation={0}
                            square={true}
                          >
                            <ForwardRef(Paper)
                              className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              elevation={0}
                              square={true}
                            >
                              <div
                                className="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                              >
                                <div>
                                  <div />
                                  <div
                                    style={
                                      Object {
                                        "display": "flex",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <img
                                      alt="Object Computing, Inc."
                                      src="/img/ocicube-white.png"
                                      style={
                                        Object {
                                          "width": "50%",
                                        }
                                      }
                                    />
                                  </div>
                                  <WithStyles(ForwardRef(List))
                                    className="makeStyles-listStyle-7"
                                    component="nav"
                                  >
                                    <ForwardRef(List)
                                      className="makeStyles-listStyle-7"
                                      classes={
                                        Object {
                                          "dense": "MuiList-dense",
                                          "padding": "MuiList-padding",
                                          "root": "MuiList-root",
                                          "subheader": "MuiList-subheader",
                                        }
                                      }
                                      component="nav"
                                    >
                                      <nav
                                        className="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                      >
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          className={null}
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          key="/"
                                          onClick={[Function]}
                                          selected={false}
                                          to="/"
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            className={null}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onClick={[Function]}
                                            selected={false}
                                            to="/"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              to="/"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                to="/"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  to="/"
                                                >
                                                  <LinkAnchor
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    href="/"
                                                    navigate={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      href="/"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        classes={null}
                                                        key=".0"
                                                        primary="HOME"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="HOME"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  HOME
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component="div"
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItemText))
                                                    key=".0"
                                                    primary="ADMIN"
                                                  >
                                                    <ForwardRef(ListItemText)
                                                      classes={
                                                        Object {
                                                          "dense": "MuiListItemText-dense",
                                                          "inset": "MuiListItemText-inset",
                                                          "multiline": "MuiListItemText-multiline",
                                                          "primary": "MuiListItemText-primary",
                                                          "root": "MuiListItemText-root",
                                                          "secondary": "MuiListItemText-secondary",
                                                        }
                                                      }
                                                      primary="ADMIN"
                                                    >
                                                      <div
                                                        className="MuiListItemText-root"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="MuiListItemText-primary"
                                                          component="span"
                                                          display="block"
                                                          variant="body1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="MuiListItemText-primary"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <span
                                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                            >
                                                              ADMIN
                                                            </span>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(ListItemText)>
                                                  </WithStyles(ForwardRef(ListItemText))>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                          unmountOnExit={true}
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "container": "MuiCollapse-container",
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                            unmountOnExit={true}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={true}
                                            />
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          className={null}
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          key="/checkins"
                                          onClick={[Function]}
                                          selected={false}
                                          to="/checkins"
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            className={null}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onClick={[Function]}
                                            selected={false}
                                            to="/checkins"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              to="/checkins"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                to="/checkins"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  to="/checkins"
                                                >
                                                  <LinkAnchor
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    href="/checkins"
                                                    navigate={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      href="/checkins"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        classes={null}
                                                        key=".0"
                                                        primary="CHECK-INS"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="CHECK-INS"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  CHECK-INS
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component="div"
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItemText))
                                                    key=".0"
                                                    primary="DIRECTORY"
                                                  >
                                                    <ForwardRef(ListItemText)
                                                      classes={
                                                        Object {
                                                          "dense": "MuiListItemText-dense",
                                                          "inset": "MuiListItemText-inset",
                                                          "multiline": "MuiListItemText-multiline",
                                                          "primary": "MuiListItemText-primary",
                                                          "root": "MuiListItemText-root",
                                                          "secondary": "MuiListItemText-secondary",
                                                        }
                                                      }
                                                      primary="DIRECTORY"
                                                    >
                                                      <div
                                                        className="MuiListItemText-root"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="MuiListItemText-primary"
                                                          component="span"
                                                          display="block"
                                                          variant="body1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="MuiListItemText-primary"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <span
                                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                            >
                                                              DIRECTORY
                                                            </span>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(ListItemText)>
                                                  </WithStyles(ForwardRef(ListItemText))>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={true}
                                          timeout="auto"
                                          unmountOnExit={true}
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "container": "MuiCollapse-container",
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={true}
                                            timeout="auto"
                                            unmountOnExit={true}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={true}
                                            >
                                              <div
                                                className="MuiCollapse-container MuiCollapse-entered"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/guilds"
                                                      selected={true}
                                                      to="/guilds"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={true}
                                                        to="/guilds"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/guilds"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/guilds"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/guilds"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                href="/guilds"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                  href="/guilds"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="Guilds"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="Guilds"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              Guilds
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/people"
                                                      selected={false}
                                                      to="/people"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={false}
                                                        to="/people"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/people"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/people"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/people"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                href="/people"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                  href="/people"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="People"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="People"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              People
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/teams"
                                                      selected={false}
                                                      to="/teams"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={false}
                                                        to="/teams"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/teams"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/teams"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/teams"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                href="/teams"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                  href="/teams"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="Teams"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="Teams"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              Teams
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component="div"
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItemText))
                                                    key=".0"
                                                    primary="FEEDBACK"
                                                  >
                                                    <ForwardRef(ListItemText)
                                                      classes={
                                                        Object {
                                                          "dense": "MuiListItemText-dense",
                                                          "inset": "MuiListItemText-inset",
                                                          "multiline": "MuiListItemText-multiline",
                                                          "primary": "MuiListItemText-primary",
                                                          "root": "MuiListItemText-root",
                                                          "secondary": "MuiListItemText-secondary",
                                                        }
                                                      }
                                                      primary="FEEDBACK"
                                                    >
                                                      <div
                                                        className="MuiListItemText-root"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="MuiListItemText-primary"
                                                          component="span"
                                                          display="block"
                                                          variant="body1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="MuiListItemText-primary"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <span
                                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                            >
                                                              FEEDBACK
                                                            </span>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(ListItemText)>
                                                  </WithStyles(ForwardRef(ListItemText))>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                          unmountOnExit={true}
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "container": "MuiCollapse-container",
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                            unmountOnExit={true}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={true}
                                            />
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component="div"
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItemText))
                                                    key=".0"
                                                    primary="REPORTS"
                                                  >
                                                    <ForwardRef(ListItemText)
                                                      classes={
                                                        Object {
                                                          "dense": "MuiListItemText-dense",
                                                          "inset": "MuiListItemText-inset",
                                                          "multiline": "MuiListItemText-multiline",
                                                          "primary": "MuiListItemText-primary",
                                                          "root": "MuiListItemText-root",
                                                          "secondary": "MuiListItemText-secondary",
                                                        }
                                                      }
                                                      primary="REPORTS"
                                                    >
                                                      <div
                                                        className="MuiListItemText-root"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="MuiListItemText-primary"
                                                          component="span"
                                                          display="block"
                                                          variant="body1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="MuiListItemText-primary"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <span
                                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                            >
                                                              REPORTS
                                                            </span>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(ListItemText)>
                                                  </WithStyles(ForwardRef(ListItemText))>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                          unmountOnExit={true}
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "container": "MuiCollapse-container",
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                            unmountOnExit={true}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={true}
                                            />
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          className={null}
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          key="/edit-skills"
                                          onClick={[Function]}
                                          selected={false}
                                          to="/edit-skills"
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            className={null}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onClick={[Function]}
                                            selected={false}
                                            to="/edit-skills"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              to="/edit-skills"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                to="/edit-skills"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  to="/edit-skills"
                                                >
                                                  <LinkAnchor
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    href="/edit-skills"
                                                    navigate={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      href="/edit-skills"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        classes={null}
                                                        key=".0"
                                                        primary="SKILLS"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="SKILLS"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  SKILLS
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                      </nav>
                                    </ForwardRef(List)>
                                  </WithStyles(ForwardRef(List))>
                                </div>
                              </div>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </div>
                      </ForwardRef(Drawer)>
                    </WithStyles(ForwardRef(Drawer))>
                  </div>
                </HiddenCss>
              </WithStyles(HiddenCss)>
            </Hidden>
            <ForwardRef(Modal)
              onBackdropClick={[Function]}
              onClose={[Function]}
              open={false}
            />
          </nav>
          <main
            className="makeStyles-content-6"
          >
            <div />
          </main>
        </div>
      </Menu>
    </Router>
  </MemoryRouter>
</AppContextProvider>
`;

exports[`<Menu /> renders correctly for pdl 1`] = `
<AppContextProvider
  value={
    Object {
      "state": Object {
        "userProfile": Object {
          "imageUrl": "https://upload.wikimedia.org/wikipedia/commons/7/74/SNL_MrBill_Doll.jpg",
          "memberProfile": Object {
            "pdlId": "",
            "title": "Tester",
            "workEmail": "test@tester.com",
          },
          "name": "holmes",
          "role": Array [
            "MEMBER",
            "PDL",
          ],
        },
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        "/guilds",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/guilds",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/guilds",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Menu>
        <div
          className="makeStyles-root-1"
          style={
            Object {
              "paddingRight": "150px",
            }
          }
        >
          <WithStyles(CssBaseline)>
            <CssBaseline
              classes={Object {}}
            />
          </WithStyles(CssBaseline)>
          <WithStyles(ForwardRef(AppBar))
            className="makeStyles-appBar-3"
            position="fixed"
          >
            <ForwardRef(AppBar)
              className="makeStyles-appBar-3"
              classes={
                Object {
                  "colorDefault": "MuiAppBar-colorDefault",
                  "colorInherit": "MuiAppBar-colorInherit",
                  "colorPrimary": "MuiAppBar-colorPrimary",
                  "colorSecondary": "MuiAppBar-colorSecondary",
                  "colorTransparent": "MuiAppBar-colorTransparent",
                  "positionAbsolute": "MuiAppBar-positionAbsolute",
                  "positionFixed": "MuiAppBar-positionFixed",
                  "positionRelative": "MuiAppBar-positionRelative",
                  "positionStatic": "MuiAppBar-positionStatic",
                  "positionSticky": "MuiAppBar-positionSticky",
                  "root": "MuiAppBar-root",
                }
              }
              position="fixed"
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                component="header"
                elevation={4}
                square={true}
              >
                <ForwardRef(Paper)
                  className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <header
                    className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary makeStyles-appBar-3 mui-fixed MuiPaper-elevation4"
                  >
                    <WithStyles(ForwardRef(Toolbar))>
                      <ForwardRef(Toolbar)
                        classes={
                          Object {
                            "dense": "MuiToolbar-dense",
                            "gutters": "MuiToolbar-gutters",
                            "regular": "MuiToolbar-regular",
                            "root": "MuiToolbar-root",
                          }
                        }
                      >
                        <div
                          className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="open drawer"
                            className="makeStyles-menuButton-4"
                            color="inherit"
                            edge="start"
                            onClick={[Function]}
                          >
                            <ForwardRef(IconButton)
                              aria-label="open drawer"
                              className="makeStyles-menuButton-4"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              edge="start"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="open drawer"
                                centerRipple={true}
                                className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="open drawer"
                                  centerRipple={true}
                                  className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <button
                                    aria-label="open drawer"
                                    className="MuiButtonBase-root MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(MenuIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(MenuIcon)>
                                    </span>
                                    <WithStyles(memo)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(Toolbar)>
                    </WithStyles(ForwardRef(Toolbar))>
                    <div
                      aria-haspopup="true"
                      onClick={[Function]}
                    >
                      <WithStyles(ForwardRef(Avatar))
                        onClick={[Function]}
                        src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                        style={
                          Object {
                            "cursor": "pointer",
                            "position": "absolute",
                            "right": "5px",
                            "textDecoration": "none",
                            "top": "10px",
                          }
                        }
                      >
                        <ForwardRef(Avatar)
                          classes={
                            Object {
                              "circle": "MuiAvatar-circle",
                              "circular": "MuiAvatar-circular",
                              "colorDefault": "MuiAvatar-colorDefault",
                              "fallback": "MuiAvatar-fallback",
                              "img": "MuiAvatar-img",
                              "root": "MuiAvatar-root",
                              "rounded": "MuiAvatar-rounded",
                              "square": "MuiAvatar-square",
                            }
                          }
                          onClick={[Function]}
                          src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                          style={
                            Object {
                              "cursor": "pointer",
                              "position": "absolute",
                              "right": "5px",
                              "textDecoration": "none",
                              "top": "10px",
                            }
                          }
                        >
                          <div
                            className="MuiAvatar-root MuiAvatar-circle"
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "position": "absolute",
                                "right": "5px",
                                "textDecoration": "none",
                                "top": "10px",
                              }
                            }
                          >
                            <img
                              className="MuiAvatar-img"
                              src="http://localhost:8080/services/member-profiles/member-photos/test%40tester.com"
                            />
                          </div>
                        </ForwardRef(Avatar)>
                      </WithStyles(ForwardRef(Avatar))>
                      <WithStyles(ForwardRef(Menu))
                        anchorEl={null}
                        id="simple-menu"
                        keepMounted={true}
                        onClose={[Function]}
                        open={false}
                      >
                        <ForwardRef(Menu)
                          anchorEl={null}
                          classes={
                            Object {
                              "list": "MuiMenu-list",
                              "paper": "MuiMenu-paper",
                            }
                          }
                          id="simple-menu"
                          keepMounted={true}
                          onClose={[Function]}
                          open={false}
                        >
                          <WithStyles(ForwardRef(Popover))
                            PaperProps={
                              Object {
                                "classes": Object {
                                  "root": "MuiMenu-paper",
                                },
                              }
                            }
                            anchorEl={null}
                            anchorOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            getContentAnchorEl={[Function]}
                            id="simple-menu"
                            keepMounted={true}
                            onClose={[Function]}
                            onEntering={[Function]}
                            open={false}
                            transformOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            transitionDuration="auto"
                          >
                            <ForwardRef(Popover)
                              PaperProps={
                                Object {
                                  "classes": Object {
                                    "root": "MuiMenu-paper",
                                  },
                                }
                              }
                              anchorEl={null}
                              anchorOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              classes={
                                Object {
                                  "paper": "MuiPopover-paper",
                                  "root": "MuiPopover-root",
                                }
                              }
                              getContentAnchorEl={[Function]}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              onEntering={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              transitionDuration="auto"
                            >
                              <ForwardRef(Modal)
                                BackdropProps={
                                  Object {
                                    "invisible": true,
                                  }
                                }
                                className="MuiPopover-root"
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <ForwardRef(Portal)
                                  disablePortal={false}
                                >
                                  <Portal
                                    containerInfo={
                                      <body>
                                        <div
                                          aria-hidden="true"
                                          class="MuiPopover-root"
                                          id="simple-menu"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                            tabindex="-1"
                                          >
                                            <ul
                                              class="MuiList-root MuiMenu-list MuiList-padding"
                                              role="menu"
                                              tabindex="-1"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                href="/profile/undefined"
                                                role="menuitem"
                                                tabindex="0"
                                              >
                                                Profile
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                            </ul>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                        <div
                                          aria-hidden="true"
                                          class="MuiPopover-root"
                                          id="simple-menu"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                            tabindex="-1"
                                          >
                                            <ul
                                              class="MuiList-root MuiMenu-list MuiList-padding"
                                              role="menu"
                                              tabindex="-1"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                href="/profile/undefined"
                                                role="menuitem"
                                                tabindex="0"
                                              >
                                                Profile
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <li
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                role="menuitem"
                                                tabindex="-1"
                                              >
                                                Upload Hours
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </li>
                                            </ul>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                        <div
                                          aria-hidden="true"
                                          class="MuiPopover-root"
                                          id="simple-menu"
                                          role="presentation"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                        >
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                            tabindex="-1"
                                          >
                                            <ul
                                              class="MuiList-root MuiMenu-list MuiList-padding"
                                              role="menu"
                                              tabindex="-1"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                href="/profile/undefined"
                                                role="menuitem"
                                                tabindex="0"
                                              >
                                                Profile
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                            </ul>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                      </body>
                                    }
                                  >
                                    <div
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      onKeyDown={[Function]}
                                      role="presentation"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "fixed",
                                          "right": 0,
                                          "top": 0,
                                          "visibility": "hidden",
                                          "zIndex": 1300,
                                        }
                                      }
                                    >
                                      <ForwardRef(SimpleBackdrop)
                                        invisible={true}
                                        onClick={[Function]}
                                        open={false}
                                      />
                                      <Unstable_TrapFocus
                                        disableAutoFocus={false}
                                        disableEnforceFocus={false}
                                        disableRestoreFocus={false}
                                        getDoc={[Function]}
                                        isEnabled={[Function]}
                                        open={false}
                                      >
                                        <div
                                          data-test="sentinelStart"
                                          tabIndex={0}
                                        />
                                        <ForwardRef(Grow)
                                          appear={true}
                                          in={false}
                                          onEnter={[Function]}
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          tabIndex="-1"
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={true}
                                            enter={true}
                                            exit={true}
                                            in={false}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            tabIndex="-1"
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <WithStyles(ForwardRef(Paper))
                                              className="MuiPopover-paper"
                                              classes={
                                                Object {
                                                  "root": "MuiMenu-paper",
                                                }
                                              }
                                              elevation={8}
                                              style={
                                                Object {
                                                  "opacity": 0,
                                                  "transform": "scale(0.75, 0.5625)",
                                                  "visibility": "hidden",
                                                }
                                              }
                                              tabIndex="-1"
                                            >
                                              <ForwardRef(Paper)
                                                className="MuiPopover-paper"
                                                classes={
                                                  Object {
                                                    "elevation0": "MuiPaper-elevation0",
                                                    "elevation1": "MuiPaper-elevation1",
                                                    "elevation10": "MuiPaper-elevation10",
                                                    "elevation11": "MuiPaper-elevation11",
                                                    "elevation12": "MuiPaper-elevation12",
                                                    "elevation13": "MuiPaper-elevation13",
                                                    "elevation14": "MuiPaper-elevation14",
                                                    "elevation15": "MuiPaper-elevation15",
                                                    "elevation16": "MuiPaper-elevation16",
                                                    "elevation17": "MuiPaper-elevation17",
                                                    "elevation18": "MuiPaper-elevation18",
                                                    "elevation19": "MuiPaper-elevation19",
                                                    "elevation2": "MuiPaper-elevation2",
                                                    "elevation20": "MuiPaper-elevation20",
                                                    "elevation21": "MuiPaper-elevation21",
                                                    "elevation22": "MuiPaper-elevation22",
                                                    "elevation23": "MuiPaper-elevation23",
                                                    "elevation24": "MuiPaper-elevation24",
                                                    "elevation3": "MuiPaper-elevation3",
                                                    "elevation4": "MuiPaper-elevation4",
                                                    "elevation5": "MuiPaper-elevation5",
                                                    "elevation6": "MuiPaper-elevation6",
                                                    "elevation7": "MuiPaper-elevation7",
                                                    "elevation8": "MuiPaper-elevation8",
                                                    "elevation9": "MuiPaper-elevation9",
                                                    "outlined": "MuiPaper-outlined",
                                                    "root": "MuiPaper-root MuiMenu-paper",
                                                    "rounded": "MuiPaper-rounded",
                                                  }
                                                }
                                                elevation={8}
                                                style={
                                                  Object {
                                                    "opacity": 0,
                                                    "transform": "scale(0.75, 0.5625)",
                                                    "visibility": "hidden",
                                                  }
                                                }
                                                tabIndex="-1"
                                              >
                                                <div
                                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style={
                                                    Object {
                                                      "opacity": 0,
                                                      "transform": "scale(0.75, 0.5625)",
                                                      "visibility": "hidden",
                                                    }
                                                  }
                                                  tabIndex="-1"
                                                >
                                                  <ForwardRef(MenuList)
                                                    actions={
                                                      Object {
                                                        "current": Object {
                                                          "adjustStyleForScrollbar": [Function],
                                                        },
                                                      }
                                                    }
                                                    autoFocus={false}
                                                    autoFocusItem={false}
                                                    className="MuiMenu-list"
                                                    onKeyDown={[Function]}
                                                    variant="selectedMenu"
                                                  >
                                                    <WithStyles(ForwardRef(List))
                                                      className="MuiMenu-list"
                                                      onKeyDown={[Function]}
                                                      role="menu"
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(List)
                                                        className="MuiMenu-list"
                                                        classes={
                                                          Object {
                                                            "dense": "MuiList-dense",
                                                            "padding": "MuiList-padding",
                                                            "root": "MuiList-root",
                                                            "subheader": "MuiList-subheader",
                                                          }
                                                        }
                                                        onKeyDown={[Function]}
                                                        role="menu"
                                                        tabIndex={-1}
                                                      >
                                                        <ul
                                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                                          onKeyDown={[Function]}
                                                          role="menu"
                                                          tabIndex={-1}
                                                        >
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            key=".$.0"
                                                            onClick={[Function]}
                                                            tabIndex={0}
                                                            to="/profile/undefined"
                                                          >
                                                            <ForwardRef(MenuItem)
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiMenuItem-dense",
                                                                  "gutters": "MuiMenuItem-gutters",
                                                                  "root": "MuiMenuItem-root",
                                                                  "selected": "Mui-selected",
                                                                }
                                                              }
                                                              component={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "displayName": "Link",
                                                                  "propTypes": Object {
                                                                    "innerRef": [Function],
                                                                    "onClick": [Function],
                                                                    "replace": [Function],
                                                                    "target": [Function],
                                                                    "to": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                              tabIndex={0}
                                                              to="/profile/undefined"
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiMenuItem-dense",
                                                                  }
                                                                }
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                disableGutters={false}
                                                                onClick={[Function]}
                                                                role="menuitem"
                                                                tabIndex={0}
                                                                to="/profile/undefined"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  disableGutters={false}
                                                                  onClick={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex={0}
                                                                  to="/profile/undefined"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={0}
                                                                    to="/profile/undefined"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                      to="/profile/undefined"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                        to="/profile/undefined"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          href="/profile/undefined"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            href="/profile/undefined"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            Profile
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </ForwardRef(MenuItem)>
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                        </ul>
                                                      </ForwardRef(List)>
                                                    </WithStyles(ForwardRef(List))>
                                                  </ForwardRef(MenuList)>
                                                </div>
                                              </ForwardRef(Paper)>
                                            </WithStyles(ForwardRef(Paper))>
                                          </Transition>
                                        </ForwardRef(Grow)>
                                        <div
                                          data-test="sentinelEnd"
                                          tabIndex={0}
                                        />
                                      </Unstable_TrapFocus>
                                    </div>
                                  </Portal>
                                </ForwardRef(Portal)>
                              </ForwardRef(Modal)>
                            </ForwardRef(Popover)>
                          </WithStyles(ForwardRef(Popover))>
                        </ForwardRef(Menu)>
                      </WithStyles(ForwardRef(Menu))>
                    </div>
                  </header>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(AppBar)>
          </WithStyles(ForwardRef(AppBar))>
          <nav
            className="makeStyles-drawer-2"
          >
            <Hidden
              implementation="css"
              smUp={true}
            >
              <WithStyles(HiddenCss)
                lgDown={false}
                lgUp={false}
                mdDown={false}
                mdUp={false}
                smDown={false}
                smUp={true}
                xlDown={false}
                xlUp={false}
                xsDown={false}
                xsUp={false}
              >
                <HiddenCss
                  classes={
                    Object {
                      "lgDown": "PrivateHiddenCss-lgDown-21",
                      "lgUp": "PrivateHiddenCss-lgUp-20",
                      "mdDown": "PrivateHiddenCss-mdDown-18",
                      "mdUp": "PrivateHiddenCss-mdUp-17",
                      "onlyLg": "PrivateHiddenCss-onlyLg-19",
                      "onlyMd": "PrivateHiddenCss-onlyMd-16",
                      "onlySm": "PrivateHiddenCss-onlySm-13",
                      "onlyXl": "PrivateHiddenCss-onlyXl-22",
                      "onlyXs": "PrivateHiddenCss-onlyXs-10",
                      "smDown": "PrivateHiddenCss-smDown-15",
                      "smUp": "PrivateHiddenCss-smUp-14",
                      "xlDown": "PrivateHiddenCss-xlDown-24",
                      "xlUp": "PrivateHiddenCss-xlUp-23",
                      "xsDown": "PrivateHiddenCss-xsDown-12",
                      "xsUp": "PrivateHiddenCss-xsUp-11",
                    }
                  }
                  lgDown={false}
                  lgUp={false}
                  mdDown={false}
                  mdUp={false}
                  smDown={false}
                  smUp={true}
                  xlDown={false}
                  xlUp={false}
                  xsDown={false}
                  xsUp={false}
                >
                  <div
                    className="PrivateHiddenCss-smUp-14"
                  >
                    <WithStyles(ForwardRef(Drawer))
                      ModalProps={
                        Object {
                          "keepMounted": true,
                        }
                      }
                      anchor="left"
                      classes={
                        Object {
                          "paper": "makeStyles-drawerPaper-5",
                        }
                      }
                      disablePortal={true}
                      onClose={[Function]}
                      open={false}
                      variant="temporary"
                    >
                      <ForwardRef(Drawer)
                        ModalProps={
                          Object {
                            "keepMounted": true,
                          }
                        }
                        anchor="left"
                        classes={
                          Object {
                            "docked": "MuiDrawer-docked",
                            "modal": "MuiDrawer-modal",
                            "paper": "MuiDrawer-paper makeStyles-drawerPaper-5",
                            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                            "root": "MuiDrawer-root",
                          }
                        }
                        disablePortal={true}
                        onClose={[Function]}
                        open={false}
                        variant="temporary"
                      >
                        <ForwardRef(Modal)
                          BackdropComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "invisible": [Function],
                                  "open": [Function],
                                  "transitionDuration": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(Backdrop))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiBackdrop",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          BackdropProps={
                            Object {
                              "transitionDuration": Object {
                                "enter": 225,
                                "exit": 195,
                              },
                            }
                          }
                          className="MuiDrawer-root MuiDrawer-modal"
                          disablePortal={true}
                          keepMounted={true}
                          onClose={[Function]}
                          open={false}
                        >
                          <ForwardRef(Portal)
                            disablePortal={true}
                          >
                            <div
                              className="MuiDrawer-root MuiDrawer-modal"
                              onKeyDown={[Function]}
                              role="presentation"
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                  "visibility": "hidden",
                                  "zIndex": 1300,
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Backdrop))
                                onClick={[Function]}
                                open={false}
                                transitionDuration={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                              >
                                <ForwardRef(Backdrop)
                                  classes={
                                    Object {
                                      "invisible": "MuiBackdrop-invisible",
                                      "root": "MuiBackdrop-root",
                                    }
                                  }
                                  onClick={[Function]}
                                  open={false}
                                  transitionDuration={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <ForwardRef(Fade)
                                    in={false}
                                    onClick={[Function]}
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                  >
                                    <Transition
                                      appear={true}
                                      enter={true}
                                      exit={true}
                                      in={false}
                                      mountOnEnter={false}
                                      onClick={[Function]}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                      unmountOnExit={false}
                                    >
                                      <div
                                        aria-hidden={true}
                                        className="MuiBackdrop-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "opacity": 0,
                                            "visibility": "hidden",
                                          }
                                        }
                                      />
                                    </Transition>
                                  </ForwardRef(Fade)>
                                </ForwardRef(Backdrop)>
                              </WithStyles(ForwardRef(Backdrop))>
                              <Unstable_TrapFocus
                                disableAutoFocus={false}
                                disableEnforceFocus={false}
                                disableRestoreFocus={false}
                                getDoc={[Function]}
                                isEnabled={[Function]}
                                open={false}
                              >
                                <div
                                  data-test="sentinelStart"
                                  tabIndex={0}
                                />
                                <ForwardRef(Slide)
                                  appear={false}
                                  direction="right"
                                  in={false}
                                  onEnter={[Function]}
                                  onExited={[Function]}
                                  tabIndex="-1"
                                  timeout={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <Transition
                                    appear={false}
                                    enter={true}
                                    exit={true}
                                    in={false}
                                    mountOnEnter={false}
                                    nodeRef={
                                      Object {
                                        "current": <div
                                          class="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiPaper-elevation16"
                                          style="visibility: hidden; webkit-transform: translateX(-0px); transform: translateX(-0px);"
                                          tabindex="-1"
                                        >
                                          <div>
                                            <div />
                                            <div
                                              style="display: flex; justify-content: center;"
                                            >
                                              <img
                                                alt="Object Computing, Inc."
                                                src="/img/ocicube-white.png"
                                                style="width: 50%;"
                                              />
                                            </div>
                                            <nav
                                              class="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                            >
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                href="/"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    HOME
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <a
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                href="/checkins"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    CHECK-INS
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </a>
                                              <div
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    DIRECTORY
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </div>
                                              <div
                                                class="MuiCollapse-container MuiCollapse-entered"
                                                style="min-height: 0px;"
                                              >
                                                <div
                                                  class="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    class="MuiCollapse-wrapperInner"
                                                  >
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                      href="/guilds"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          Guilds
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                      href="/people"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          People
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                    <a
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                      href="/teams"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <div
                                                        class="MuiListItemText-root"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                        >
                                                          Teams
                                                        </span>
                                                      </div>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </a>
                                                  </div>
                                                </div>
                                              </div>
                                              <div
                                                aria-disabled="false"
                                                class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <div
                                                  class="MuiListItemText-root"
                                                >
                                                  <span
                                                    class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                  >
                                                    FEEDBACK
                                                  </span>
                                                </div>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </div>
                                            </nav>
                                          </div>
                                        </div>,
                                      }
                                    }
                                    onEnter={[Function]}
                                    onEntered={[Function]}
                                    onEntering={[Function]}
                                    onExit={[Function]}
                                    onExited={[Function]}
                                    onExiting={[Function]}
                                    tabIndex="-1"
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                    unmountOnExit={false}
                                  >
                                    <WithStyles(ForwardRef(Paper))
                                      className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft"
                                      elevation={16}
                                      square={true}
                                      style={
                                        Object {
                                          "visibility": "hidden",
                                        }
                                      }
                                      tabIndex="-1"
                                    >
                                      <ForwardRef(Paper)
                                        className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft"
                                        classes={
                                          Object {
                                            "elevation0": "MuiPaper-elevation0",
                                            "elevation1": "MuiPaper-elevation1",
                                            "elevation10": "MuiPaper-elevation10",
                                            "elevation11": "MuiPaper-elevation11",
                                            "elevation12": "MuiPaper-elevation12",
                                            "elevation13": "MuiPaper-elevation13",
                                            "elevation14": "MuiPaper-elevation14",
                                            "elevation15": "MuiPaper-elevation15",
                                            "elevation16": "MuiPaper-elevation16",
                                            "elevation17": "MuiPaper-elevation17",
                                            "elevation18": "MuiPaper-elevation18",
                                            "elevation19": "MuiPaper-elevation19",
                                            "elevation2": "MuiPaper-elevation2",
                                            "elevation20": "MuiPaper-elevation20",
                                            "elevation21": "MuiPaper-elevation21",
                                            "elevation22": "MuiPaper-elevation22",
                                            "elevation23": "MuiPaper-elevation23",
                                            "elevation24": "MuiPaper-elevation24",
                                            "elevation3": "MuiPaper-elevation3",
                                            "elevation4": "MuiPaper-elevation4",
                                            "elevation5": "MuiPaper-elevation5",
                                            "elevation6": "MuiPaper-elevation6",
                                            "elevation7": "MuiPaper-elevation7",
                                            "elevation8": "MuiPaper-elevation8",
                                            "elevation9": "MuiPaper-elevation9",
                                            "outlined": "MuiPaper-outlined",
                                            "root": "MuiPaper-root",
                                            "rounded": "MuiPaper-rounded",
                                          }
                                        }
                                        elevation={16}
                                        square={true}
                                        style={
                                          Object {
                                            "visibility": "hidden",
                                          }
                                        }
                                        tabIndex="-1"
                                      >
                                        <div
                                          className="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiPaper-elevation16"
                                          style={
                                            Object {
                                              "visibility": "hidden",
                                            }
                                          }
                                          tabIndex="-1"
                                        >
                                          <div>
                                            <div />
                                            <div
                                              style={
                                                Object {
                                                  "display": "flex",
                                                  "justifyContent": "center",
                                                }
                                              }
                                            >
                                              <img
                                                alt="Object Computing, Inc."
                                                src="/img/ocicube-white.png"
                                                style={
                                                  Object {
                                                    "width": "50%",
                                                  }
                                                }
                                              />
                                            </div>
                                            <WithStyles(ForwardRef(List))
                                              className="makeStyles-listStyle-7"
                                              component="nav"
                                            >
                                              <ForwardRef(List)
                                                className="makeStyles-listStyle-7"
                                                classes={
                                                  Object {
                                                    "dense": "MuiList-dense",
                                                    "padding": "MuiList-padding",
                                                    "root": "MuiList-root",
                                                    "subheader": "MuiList-subheader",
                                                  }
                                                }
                                                component="nav"
                                              >
                                                <nav
                                                  className="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className={null}
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "Link",
                                                        "propTypes": Object {
                                                          "innerRef": [Function],
                                                          "onClick": [Function],
                                                          "replace": [Function],
                                                          "target": [Function],
                                                          "to": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    key="/"
                                                    onClick={[Function]}
                                                    selected={false}
                                                    to="/"
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className={null}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      selected={false}
                                                      to="/"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        to="/"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          to="/"
                                                        >
                                                          <Link
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                            to="/"
                                                          >
                                                            <LinkAnchor
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                              href="/"
                                                              navigate={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                                href="/"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ListItemText))
                                                                  classes={null}
                                                                  key=".0"
                                                                  primary="HOME"
                                                                >
                                                                  <ForwardRef(ListItemText)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiListItemText-dense",
                                                                        "inset": "MuiListItemText-inset",
                                                                        "multiline": "MuiListItemText-multiline",
                                                                        "primary": "MuiListItemText-primary",
                                                                        "root": "MuiListItemText-root",
                                                                        "secondary": "MuiListItemText-secondary",
                                                                      }
                                                                    }
                                                                    primary="HOME"
                                                                  >
                                                                    <div
                                                                      className="MuiListItemText-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="MuiListItemText-primary"
                                                                        component="span"
                                                                        display="block"
                                                                        variant="body1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="MuiListItemText-primary"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                              "alignRight": "MuiTypography-alignRight",
                                                                              "body1": "MuiTypography-body1",
                                                                              "body2": "MuiTypography-body2",
                                                                              "button": "MuiTypography-button",
                                                                              "caption": "MuiTypography-caption",
                                                                              "colorError": "MuiTypography-colorError",
                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                              "displayInline": "MuiTypography-displayInline",
                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                              "h1": "MuiTypography-h1",
                                                                              "h2": "MuiTypography-h2",
                                                                              "h3": "MuiTypography-h3",
                                                                              "h4": "MuiTypography-h4",
                                                                              "h5": "MuiTypography-h5",
                                                                              "h6": "MuiTypography-h6",
                                                                              "noWrap": "MuiTypography-noWrap",
                                                                              "overline": "MuiTypography-overline",
                                                                              "paragraph": "MuiTypography-paragraph",
                                                                              "root": "MuiTypography-root",
                                                                              "srOnly": "MuiTypography-srOnly",
                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                            }
                                                                          }
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <span
                                                                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                          >
                                                                            HOME
                                                                          </span>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                    </div>
                                                                  </ForwardRef(ListItemText)>
                                                                </WithStyles(ForwardRef(ListItemText))>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </a>
                                                            </LinkAnchor>
                                                          </Link>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className={null}
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "Link",
                                                        "propTypes": Object {
                                                          "innerRef": [Function],
                                                          "onClick": [Function],
                                                          "replace": [Function],
                                                          "target": [Function],
                                                          "to": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    key="/checkins"
                                                    onClick={[Function]}
                                                    selected={false}
                                                    to="/checkins"
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className={null}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      selected={false}
                                                      to="/checkins"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        to="/checkins"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          to="/checkins"
                                                        >
                                                          <Link
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                            to="/checkins"
                                                          >
                                                            <LinkAnchor
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                              href="/checkins"
                                                              navigate={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                                href="/checkins"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ListItemText))
                                                                  classes={null}
                                                                  key=".0"
                                                                  primary="CHECK-INS"
                                                                >
                                                                  <ForwardRef(ListItemText)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiListItemText-dense",
                                                                        "inset": "MuiListItemText-inset",
                                                                        "multiline": "MuiListItemText-multiline",
                                                                        "primary": "MuiListItemText-primary",
                                                                        "root": "MuiListItemText-root",
                                                                        "secondary": "MuiListItemText-secondary",
                                                                      }
                                                                    }
                                                                    primary="CHECK-INS"
                                                                  >
                                                                    <div
                                                                      className="MuiListItemText-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="MuiListItemText-primary"
                                                                        component="span"
                                                                        display="block"
                                                                        variant="body1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="MuiListItemText-primary"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                              "alignRight": "MuiTypography-alignRight",
                                                                              "body1": "MuiTypography-body1",
                                                                              "body2": "MuiTypography-body2",
                                                                              "button": "MuiTypography-button",
                                                                              "caption": "MuiTypography-caption",
                                                                              "colorError": "MuiTypography-colorError",
                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                              "displayInline": "MuiTypography-displayInline",
                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                              "h1": "MuiTypography-h1",
                                                                              "h2": "MuiTypography-h2",
                                                                              "h3": "MuiTypography-h3",
                                                                              "h4": "MuiTypography-h4",
                                                                              "h5": "MuiTypography-h5",
                                                                              "h6": "MuiTypography-h6",
                                                                              "noWrap": "MuiTypography-noWrap",
                                                                              "overline": "MuiTypography-overline",
                                                                              "paragraph": "MuiTypography-paragraph",
                                                                              "root": "MuiTypography-root",
                                                                              "srOnly": "MuiTypography-srOnly",
                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                            }
                                                                          }
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <span
                                                                            className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                          >
                                                                            CHECK-INS
                                                                          </span>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                    </div>
                                                                  </ForwardRef(ListItemText)>
                                                                </WithStyles(ForwardRef(ListItemText))>
                                                                <WithStyles(memo)
                                                                  center={false}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </a>
                                                            </LinkAnchor>
                                                          </Link>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemText))
                                                              key=".0"
                                                              primary="DIRECTORY"
                                                            >
                                                              <ForwardRef(ListItemText)
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiListItemText-dense",
                                                                    "inset": "MuiListItemText-inset",
                                                                    "multiline": "MuiListItemText-multiline",
                                                                    "primary": "MuiListItemText-primary",
                                                                    "root": "MuiListItemText-root",
                                                                    "secondary": "MuiListItemText-secondary",
                                                                  }
                                                                }
                                                                primary="DIRECTORY"
                                                              >
                                                                <div
                                                                  className="MuiListItemText-root"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    className="MuiListItemText-primary"
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      className="MuiListItemText-primary"
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      display="block"
                                                                      variant="body1"
                                                                    >
                                                                      <span
                                                                        className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                      >
                                                                        DIRECTORY
                                                                      </span>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </ForwardRef(ListItemText)>
                                                            </WithStyles(ForwardRef(ListItemText))>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(Collapse))
                                                    in={true}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <ForwardRef(Collapse)
                                                      classes={
                                                        Object {
                                                          "container": "MuiCollapse-container",
                                                          "entered": "MuiCollapse-entered",
                                                          "hidden": "MuiCollapse-hidden",
                                                          "wrapper": "MuiCollapse-wrapper",
                                                          "wrapperInner": "MuiCollapse-wrapperInner",
                                                        }
                                                      }
                                                      in={true}
                                                      timeout="auto"
                                                      unmountOnExit={true}
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={false}
                                                        enter={true}
                                                        exit={true}
                                                        in={true}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        timeout={null}
                                                        unmountOnExit={true}
                                                      >
                                                        <div
                                                          className="MuiCollapse-container MuiCollapse-entered"
                                                          style={
                                                            Object {
                                                              "minHeight": "0px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiCollapse-wrapper"
                                                          >
                                                            <div
                                                              className="MuiCollapse-wrapperInner"
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/guilds"
                                                                selected={true}
                                                                to="/guilds"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={true}
                                                                  to="/guilds"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/guilds"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/guilds"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/guilds"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                          href="/guilds"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                            href="/guilds"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="Guilds"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="Guilds"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        Guilds
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/people"
                                                                selected={false}
                                                                to="/people"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={false}
                                                                  to="/people"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/people"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/people"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/people"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                          href="/people"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                            href="/people"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="People"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="People"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        People
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                              <WithStyles(ForwardRef(ListItem))
                                                                button={true}
                                                                className="makeStyles-nested-8"
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "Link",
                                                                    "propTypes": Object {
                                                                      "innerRef": [Function],
                                                                      "onClick": [Function],
                                                                      "replace": [Function],
                                                                      "target": [Function],
                                                                      "to": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                key="/teams"
                                                                selected={false}
                                                                to="/teams"
                                                              >
                                                                <ForwardRef(ListItem)
                                                                  button={true}
                                                                  className="makeStyles-nested-8"
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                      "button": "MuiListItem-button",
                                                                      "container": "MuiListItem-container",
                                                                      "dense": "MuiListItem-dense",
                                                                      "disabled": "Mui-disabled",
                                                                      "divider": "MuiListItem-divider",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "gutters": "MuiListItem-gutters",
                                                                      "root": "MuiListItem-root",
                                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                                      "selected": "Mui-selected",
                                                                    }
                                                                  }
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  selected={false}
                                                                  to="/teams"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "displayName": "Link",
                                                                        "propTypes": Object {
                                                                          "innerRef": [Function],
                                                                          "onClick": [Function],
                                                                          "replace": [Function],
                                                                          "target": [Function],
                                                                          "to": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    to="/teams"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "displayName": "Link",
                                                                          "propTypes": Object {
                                                                            "innerRef": [Function],
                                                                            "onClick": [Function],
                                                                            "replace": [Function],
                                                                            "target": [Function],
                                                                            "to": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                      to="/teams"
                                                                    >
                                                                      <Link
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                        onBlur={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                        to="/teams"
                                                                      >
                                                                        <LinkAnchor
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                          href="/teams"
                                                                          navigate={[Function]}
                                                                          onBlur={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                            href="/teams"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ListItemText))
                                                                              classes={
                                                                                Object {
                                                                                  "primary": "makeStyles-subListItem-9",
                                                                                }
                                                                              }
                                                                              key=".0"
                                                                              primary="Teams"
                                                                            >
                                                                              <ForwardRef(ListItemText)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "MuiListItemText-dense",
                                                                                    "inset": "MuiListItemText-inset",
                                                                                    "multiline": "MuiListItemText-multiline",
                                                                                    "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                                    "root": "MuiListItemText-root",
                                                                                    "secondary": "MuiListItemText-secondary",
                                                                                  }
                                                                                }
                                                                                primary="Teams"
                                                                              >
                                                                                <div
                                                                                  className="MuiListItemText-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                    component="span"
                                                                                    display="block"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      component="span"
                                                                                      display="block"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                                      >
                                                                                        Teams
                                                                                      </span>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </div>
                                                                              </ForwardRef(ListItemText)>
                                                                            </WithStyles(ForwardRef(ListItemText))>
                                                                            <WithStyles(memo)
                                                                              center={false}
                                                                            >
                                                                              <ForwardRef(TouchRipple)
                                                                                center={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "child": "MuiTouchRipple-child",
                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                    "root": "MuiTouchRipple-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root"
                                                                                >
                                                                                  <TransitionGroup
                                                                                    childFactory={[Function]}
                                                                                    component={null}
                                                                                    exit={true}
                                                                                  />
                                                                                </span>
                                                                              </ForwardRef(TouchRipple)>
                                                                            </WithStyles(memo)>
                                                                          </a>
                                                                        </LinkAnchor>
                                                                      </Link>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </div>
                                                          </div>
                                                        </div>
                                                      </Transition>
                                                    </ForwardRef(Collapse)>
                                                  </WithStyles(ForwardRef(Collapse))>
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemText))
                                                              key=".0"
                                                              primary="FEEDBACK"
                                                            >
                                                              <ForwardRef(ListItemText)
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiListItemText-dense",
                                                                    "inset": "MuiListItemText-inset",
                                                                    "multiline": "MuiListItemText-multiline",
                                                                    "primary": "MuiListItemText-primary",
                                                                    "root": "MuiListItemText-root",
                                                                    "secondary": "MuiListItemText-secondary",
                                                                  }
                                                                }
                                                                primary="FEEDBACK"
                                                              >
                                                                <div
                                                                  className="MuiListItemText-root"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    className="MuiListItemText-primary"
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      className="MuiListItemText-primary"
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      display="block"
                                                                      variant="body1"
                                                                    >
                                                                      <span
                                                                        className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                      >
                                                                        FEEDBACK
                                                                      </span>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </ForwardRef(ListItemText)>
                                                            </WithStyles(ForwardRef(ListItemText))>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                  <WithStyles(ForwardRef(Collapse))
                                                    in={false}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <ForwardRef(Collapse)
                                                      classes={
                                                        Object {
                                                          "container": "MuiCollapse-container",
                                                          "entered": "MuiCollapse-entered",
                                                          "hidden": "MuiCollapse-hidden",
                                                          "wrapper": "MuiCollapse-wrapper",
                                                          "wrapperInner": "MuiCollapse-wrapperInner",
                                                        }
                                                      }
                                                      in={false}
                                                      timeout="auto"
                                                      unmountOnExit={true}
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={false}
                                                        enter={true}
                                                        exit={true}
                                                        in={false}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        timeout={null}
                                                        unmountOnExit={true}
                                                      />
                                                    </ForwardRef(Collapse)>
                                                  </WithStyles(ForwardRef(Collapse))>
                                                </nav>
                                              </ForwardRef(List)>
                                            </WithStyles(ForwardRef(List))>
                                          </div>
                                        </div>
                                      </ForwardRef(Paper)>
                                    </WithStyles(ForwardRef(Paper))>
                                  </Transition>
                                </ForwardRef(Slide)>
                                <div
                                  data-test="sentinelEnd"
                                  tabIndex={0}
                                />
                              </Unstable_TrapFocus>
                            </div>
                          </ForwardRef(Portal)>
                        </ForwardRef(Modal)>
                      </ForwardRef(Drawer)>
                    </WithStyles(ForwardRef(Drawer))>
                  </div>
                </HiddenCss>
              </WithStyles(HiddenCss)>
            </Hidden>
            <Hidden
              implementation="css"
              xsDown={true}
            >
              <WithStyles(HiddenCss)
                lgDown={false}
                lgUp={false}
                mdDown={false}
                mdUp={false}
                smDown={false}
                smUp={false}
                xlDown={false}
                xlUp={false}
                xsDown={true}
                xsUp={false}
              >
                <HiddenCss
                  classes={
                    Object {
                      "lgDown": "PrivateHiddenCss-lgDown-21",
                      "lgUp": "PrivateHiddenCss-lgUp-20",
                      "mdDown": "PrivateHiddenCss-mdDown-18",
                      "mdUp": "PrivateHiddenCss-mdUp-17",
                      "onlyLg": "PrivateHiddenCss-onlyLg-19",
                      "onlyMd": "PrivateHiddenCss-onlyMd-16",
                      "onlySm": "PrivateHiddenCss-onlySm-13",
                      "onlyXl": "PrivateHiddenCss-onlyXl-22",
                      "onlyXs": "PrivateHiddenCss-onlyXs-10",
                      "smDown": "PrivateHiddenCss-smDown-15",
                      "smUp": "PrivateHiddenCss-smUp-14",
                      "xlDown": "PrivateHiddenCss-xlDown-24",
                      "xlUp": "PrivateHiddenCss-xlUp-23",
                      "xsDown": "PrivateHiddenCss-xsDown-12",
                      "xsUp": "PrivateHiddenCss-xsUp-11",
                    }
                  }
                  lgDown={false}
                  lgUp={false}
                  mdDown={false}
                  mdUp={false}
                  smDown={false}
                  smUp={false}
                  xlDown={false}
                  xlUp={false}
                  xsDown={true}
                  xsUp={false}
                >
                  <div
                    className="PrivateHiddenCss-xsDown-12"
                  >
                    <WithStyles(ForwardRef(Drawer))
                      classes={
                        Object {
                          "paper": "makeStyles-drawerPaper-5",
                        }
                      }
                      open={true}
                      variant="permanent"
                    >
                      <ForwardRef(Drawer)
                        classes={
                          Object {
                            "docked": "MuiDrawer-docked",
                            "modal": "MuiDrawer-modal",
                            "paper": "MuiDrawer-paper makeStyles-drawerPaper-5",
                            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                            "root": "MuiDrawer-root",
                          }
                        }
                        open={true}
                        variant="permanent"
                      >
                        <div
                          className="MuiDrawer-root MuiDrawer-docked"
                        >
                          <WithStyles(ForwardRef(Paper))
                            className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                            elevation={0}
                            square={true}
                          >
                            <ForwardRef(Paper)
                              className="MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              elevation={0}
                              square={true}
                            >
                              <div
                                className="MuiPaper-root MuiDrawer-paper makeStyles-drawerPaper-5 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                              >
                                <div>
                                  <div />
                                  <div
                                    style={
                                      Object {
                                        "display": "flex",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <img
                                      alt="Object Computing, Inc."
                                      src="/img/ocicube-white.png"
                                      style={
                                        Object {
                                          "width": "50%",
                                        }
                                      }
                                    />
                                  </div>
                                  <WithStyles(ForwardRef(List))
                                    className="makeStyles-listStyle-7"
                                    component="nav"
                                  >
                                    <ForwardRef(List)
                                      className="makeStyles-listStyle-7"
                                      classes={
                                        Object {
                                          "dense": "MuiList-dense",
                                          "padding": "MuiList-padding",
                                          "root": "MuiList-root",
                                          "subheader": "MuiList-subheader",
                                        }
                                      }
                                      component="nav"
                                    >
                                      <nav
                                        className="MuiList-root makeStyles-listStyle-7 MuiList-padding"
                                      >
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          className={null}
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          key="/"
                                          onClick={[Function]}
                                          selected={false}
                                          to="/"
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            className={null}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onClick={[Function]}
                                            selected={false}
                                            to="/"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              to="/"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                to="/"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  to="/"
                                                >
                                                  <LinkAnchor
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    href="/"
                                                    navigate={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      href="/"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        classes={null}
                                                        key=".0"
                                                        primary="HOME"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="HOME"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  HOME
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          className={null}
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          key="/checkins"
                                          onClick={[Function]}
                                          selected={false}
                                          to="/checkins"
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            className={null}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onClick={[Function]}
                                            selected={false}
                                            to="/checkins"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              to="/checkins"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                to="/checkins"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  to="/checkins"
                                                >
                                                  <LinkAnchor
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    href="/checkins"
                                                    navigate={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      href="/checkins"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        classes={null}
                                                        key=".0"
                                                        primary="CHECK-INS"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="CHECK-INS"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  CHECK-INS
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component="div"
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItemText))
                                                    key=".0"
                                                    primary="DIRECTORY"
                                                  >
                                                    <ForwardRef(ListItemText)
                                                      classes={
                                                        Object {
                                                          "dense": "MuiListItemText-dense",
                                                          "inset": "MuiListItemText-inset",
                                                          "multiline": "MuiListItemText-multiline",
                                                          "primary": "MuiListItemText-primary",
                                                          "root": "MuiListItemText-root",
                                                          "secondary": "MuiListItemText-secondary",
                                                        }
                                                      }
                                                      primary="DIRECTORY"
                                                    >
                                                      <div
                                                        className="MuiListItemText-root"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="MuiListItemText-primary"
                                                          component="span"
                                                          display="block"
                                                          variant="body1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="MuiListItemText-primary"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <span
                                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                            >
                                                              DIRECTORY
                                                            </span>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(ListItemText)>
                                                  </WithStyles(ForwardRef(ListItemText))>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={true}
                                          timeout="auto"
                                          unmountOnExit={true}
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "container": "MuiCollapse-container",
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={true}
                                            timeout="auto"
                                            unmountOnExit={true}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={true}
                                            >
                                              <div
                                                className="MuiCollapse-container MuiCollapse-entered"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/guilds"
                                                      selected={true}
                                                      to="/guilds"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={true}
                                                        to="/guilds"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/guilds"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/guilds"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/guilds"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                href="/guilds"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button Mui-selected"
                                                                  href="/guilds"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="Guilds"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="Guilds"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              Guilds
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/people"
                                                      selected={false}
                                                      to="/people"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={false}
                                                        to="/people"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/people"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/people"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/people"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                href="/people"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                  href="/people"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="People"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="People"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              People
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                    <WithStyles(ForwardRef(ListItem))
                                                      button={true}
                                                      className="makeStyles-nested-8"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "Link",
                                                          "propTypes": Object {
                                                            "innerRef": [Function],
                                                            "onClick": [Function],
                                                            "replace": [Function],
                                                            "target": [Function],
                                                            "to": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      key="/teams"
                                                      selected={false}
                                                      to="/teams"
                                                    >
                                                      <ForwardRef(ListItem)
                                                        button={true}
                                                        className="makeStyles-nested-8"
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                            "button": "MuiListItem-button",
                                                            "container": "MuiListItem-container",
                                                            "dense": "MuiListItem-dense",
                                                            "disabled": "Mui-disabled",
                                                            "divider": "MuiListItem-divider",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "gutters": "MuiListItem-gutters",
                                                            "root": "MuiListItem-root",
                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "Link",
                                                            "propTypes": Object {
                                                              "innerRef": [Function],
                                                              "onClick": [Function],
                                                              "replace": [Function],
                                                              "target": [Function],
                                                              "to": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        selected={false}
                                                        to="/teams"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "Link",
                                                              "propTypes": Object {
                                                                "innerRef": [Function],
                                                                "onClick": [Function],
                                                                "replace": [Function],
                                                                "target": [Function],
                                                                "to": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          to="/teams"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "Link",
                                                                "propTypes": Object {
                                                                  "innerRef": [Function],
                                                                  "onClick": [Function],
                                                                  "replace": [Function],
                                                                  "target": [Function],
                                                                  "to": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            to="/teams"
                                                          >
                                                            <Link
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              to="/teams"
                                                            >
                                                              <LinkAnchor
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                href="/teams"
                                                                navigate={[Function]}
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <a
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiListItem-root makeStyles-nested-8 MuiListItem-gutters MuiListItem-button"
                                                                  href="/teams"
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ListItemText))
                                                                    classes={
                                                                      Object {
                                                                        "primary": "makeStyles-subListItem-9",
                                                                      }
                                                                    }
                                                                    key=".0"
                                                                    primary="Teams"
                                                                  >
                                                                    <ForwardRef(ListItemText)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiListItemText-dense",
                                                                          "inset": "MuiListItemText-inset",
                                                                          "multiline": "MuiListItemText-multiline",
                                                                          "primary": "MuiListItemText-primary makeStyles-subListItem-9",
                                                                          "root": "MuiListItemText-root",
                                                                          "secondary": "MuiListItemText-secondary",
                                                                        }
                                                                      }
                                                                      primary="Teams"
                                                                    >
                                                                      <div
                                                                        className="MuiListItemText-root"
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                          component="span"
                                                                          display="block"
                                                                          variant="body1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="MuiListItemText-primary makeStyles-subListItem-9"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                                "alignRight": "MuiTypography-alignRight",
                                                                                "body1": "MuiTypography-body1",
                                                                                "body2": "MuiTypography-body2",
                                                                                "button": "MuiTypography-button",
                                                                                "caption": "MuiTypography-caption",
                                                                                "colorError": "MuiTypography-colorError",
                                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                                "displayInline": "MuiTypography-displayInline",
                                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                                "h1": "MuiTypography-h1",
                                                                                "h2": "MuiTypography-h2",
                                                                                "h3": "MuiTypography-h3",
                                                                                "h4": "MuiTypography-h4",
                                                                                "h5": "MuiTypography-h5",
                                                                                "h6": "MuiTypography-h6",
                                                                                "noWrap": "MuiTypography-noWrap",
                                                                                "overline": "MuiTypography-overline",
                                                                                "paragraph": "MuiTypography-paragraph",
                                                                                "root": "MuiTypography-root",
                                                                                "srOnly": "MuiTypography-srOnly",
                                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                                "subtitle2": "MuiTypography-subtitle2",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            display="block"
                                                                            variant="body1"
                                                                          >
                                                                            <span
                                                                              className="MuiTypography-root MuiListItemText-primary makeStyles-subListItem-9 MuiTypography-body1 MuiTypography-displayBlock"
                                                                            >
                                                                              Teams
                                                                            </span>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </div>
                                                                    </ForwardRef(ListItemText)>
                                                                  </WithStyles(ForwardRef(ListItemText))>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(ListItem)>
                                                    </WithStyles(ForwardRef(ListItem))>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                        <WithStyles(ForwardRef(ListItem))
                                          button={true}
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ListItem)
                                            button={true}
                                            classes={
                                              Object {
                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                "button": "MuiListItem-button",
                                                "container": "MuiListItem-container",
                                                "dense": "MuiListItem-dense",
                                                "disabled": "Mui-disabled",
                                                "divider": "MuiListItem-divider",
                                                "focusVisible": "Mui-focusVisible",
                                                "gutters": "MuiListItem-gutters",
                                                "root": "MuiListItem-root",
                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                              component="div"
                                              disabled={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItemText))
                                                    key=".0"
                                                    primary="FEEDBACK"
                                                  >
                                                    <ForwardRef(ListItemText)
                                                      classes={
                                                        Object {
                                                          "dense": "MuiListItemText-dense",
                                                          "inset": "MuiListItemText-inset",
                                                          "multiline": "MuiListItemText-multiline",
                                                          "primary": "MuiListItemText-primary",
                                                          "root": "MuiListItemText-root",
                                                          "secondary": "MuiListItemText-secondary",
                                                        }
                                                      }
                                                      primary="FEEDBACK"
                                                    >
                                                      <div
                                                        className="MuiListItemText-root"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="MuiListItemText-primary"
                                                          component="span"
                                                          display="block"
                                                          variant="body1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="MuiListItemText-primary"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <span
                                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                            >
                                                              FEEDBACK
                                                            </span>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(ListItemText)>
                                                  </WithStyles(ForwardRef(ListItemText))>
                                                  <WithStyles(memo)
                                                    center={false}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(ListItem)>
                                        </WithStyles(ForwardRef(ListItem))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                          unmountOnExit={true}
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "container": "MuiCollapse-container",
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                            unmountOnExit={true}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={true}
                                            />
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </nav>
                                    </ForwardRef(List)>
                                  </WithStyles(ForwardRef(List))>
                                </div>
                              </div>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </div>
                      </ForwardRef(Drawer)>
                    </WithStyles(ForwardRef(Drawer))>
                  </div>
                </HiddenCss>
              </WithStyles(HiddenCss)>
            </Hidden>
            <ForwardRef(Modal)
              onBackdropClick={[Function]}
              onClose={[Function]}
              open={false}
            />
          </nav>
          <main
            className="makeStyles-content-6"
          >
            <div />
          </main>
        </div>
      </Menu>
    </Router>
  </MemoryRouter>
</AppContextProvider>
`;
