// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
.emotion-0 {
  background-color: #fff;
  color: rgba(0, 0, 0, 0.87);
  -webkit-transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  border-radius: 4px;
  box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12);
  width: 100%;
  overflow-x: auto;
}

.emotion-1 {
  display: table;
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

.emotion-1 caption {
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.43;
  letter-spacing: 0.01071em;
  padding: 16px;
  color: rgba(0, 0, 0, 0.6);
  text-align: left;
  caption-side: bottom;
}

.emotion-2 {
  display: table-header-group;
}

.emotion-3 {
  color: inherit;
  display: table-row;
  vertical-align: middle;
  outline: 0;
}

.emotion-3.MuiTableRow-hover:hover {
  background-color: rgba(0, 0, 0, 0.04);
}

.emotion-3.Mui-selected {
  background-color: rgba(25, 118, 210, 0.08);
}

.emotion-3.Mui-selected:hover {
  background-color: rgba(25, 118, 210, 0.12);
}

.emotion-4 {
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.5rem;
  letter-spacing: 0.01071em;
  display: table-cell;
  vertical-align: inherit;
  border-bottom: 1px solid rgba(224, 224, 224, 1);
  text-align: left;
  padding: 16px;
  color: rgba(0, 0, 0, 0.87);
}

.emotion-5.Mui-focused .MuiAutocomplete-clearIndicator {
  visibility: visible;
}

@media (pointer: fine) {
  .emotion-5:hover .MuiAutocomplete-clearIndicator {
    visibility: visible;
  }
}

.emotion-5 .MuiAutocomplete-tag {
  margin: 2px;
  max-width: calc(100% - 4px);
}

.emotion-5 .MuiAutocomplete-inputRoot {
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.MuiAutocomplete-hasPopupIcon.emotion-5 .MuiAutocomplete-inputRoot,
.MuiAutocomplete-hasClearIcon.emotion-5 .MuiAutocomplete-inputRoot {
  padding-right: 30px;
}

.MuiAutocomplete-hasPopupIcon.MuiAutocomplete-hasClearIcon.emotion-5 .MuiAutocomplete-inputRoot {
  padding-right: 56px;
}

.emotion-5 .MuiAutocomplete-inputRoot .MuiAutocomplete-input {
  width: 0;
  min-width: 30px;
}

.emotion-5 .MuiInput-root {
  padding-bottom: 1px;
}

.emotion-5 .MuiInput-root .MuiInput-input {
  padding: 4px 4px 4px 0px;
}

.emotion-5 .MuiInput-root.MuiInputBase-sizeSmall .MuiInput-input {
  padding: 2px 4px 3px 0;
}

.emotion-5 .MuiOutlinedInput-root {
  padding: 9px;
}

.MuiAutocomplete-hasPopupIcon.emotion-5 .MuiOutlinedInput-root,
.MuiAutocomplete-hasClearIcon.emotion-5 .MuiOutlinedInput-root {
  padding-right: 39px;
}

.MuiAutocomplete-hasPopupIcon.MuiAutocomplete-hasClearIcon.emotion-5 .MuiOutlinedInput-root {
  padding-right: 65px;
}

.emotion-5 .MuiOutlinedInput-root .MuiAutocomplete-input {
  padding: 7.5px 4px 7.5px 6px;
}

.emotion-5 .MuiOutlinedInput-root .MuiAutocomplete-endAdornment {
  right: 9px;
}

.emotion-5 .MuiOutlinedInput-root.MuiInputBase-sizeSmall {
  padding: 6px;
}

.emotion-5 .MuiOutlinedInput-root.MuiInputBase-sizeSmall .MuiAutocomplete-input {
  padding: 2.5px 4px 2.5px 6px;
}

.emotion-5 .MuiFilledInput-root {
  padding-top: 19px;
  padding-left: 8px;
}

.MuiAutocomplete-hasPopupIcon.emotion-5 .MuiFilledInput-root,
.MuiAutocomplete-hasClearIcon.emotion-5 .MuiFilledInput-root {
  padding-right: 39px;
}

.MuiAutocomplete-hasPopupIcon.MuiAutocomplete-hasClearIcon.emotion-5 .MuiFilledInput-root {
  padding-right: 65px;
}

.emotion-5 .MuiFilledInput-root .MuiFilledInput-input {
  padding: 7px 4px;
}

.emotion-5 .MuiFilledInput-root .MuiAutocomplete-endAdornment {
  right: 9px;
}

.emotion-5 .MuiFilledInput-root.MuiInputBase-sizeSmall {
  padding-bottom: 1px;
}

.emotion-5 .MuiFilledInput-root.MuiInputBase-sizeSmall .MuiFilledInput-input {
  padding: 2.5px 4px;
}

.emotion-5 .MuiInputBase-hiddenLabel {
  padding-top: 8px;
}

.emotion-5 .MuiAutocomplete-input {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  text-overflow: ellipsis;
  opacity: 1;
}

.emotion-6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
  vertical-align: top;
  width: 100%;
}

.emotion-7 {
  color: rgba(0, 0, 0, 0.6);
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.4375em;
  letter-spacing: 0.00938em;
  padding: 0;
  position: relative;
  display: block;
  transform-origin: top left;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: calc(100% - 24px);
  position: absolute;
  left: 0;
  top: 0;
  -webkit-transform: translate(14px, 9px) scale(1);
  -moz-transform: translate(14px, 9px) scale(1);
  -ms-transform: translate(14px, 9px) scale(1);
  transform: translate(14px, 9px) scale(1);
  -webkit-transition: color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,-webkit-transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,max-width 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
  transition: color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,max-width 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
  z-index: 1;
  pointer-events: none;
}

.emotion-7.Mui-focused {
  color: #1976d2;
}

.emotion-7.Mui-disabled {
  color: rgba(0, 0, 0, 0.38);
}

.emotion-7.Mui-error {
  color: #d32f2f;
}

.emotion-8 {
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.4375em;
  letter-spacing: 0.00938em;
  color: rgba(0, 0, 0, 0.87);
  box-sizing: border-box;
  position: relative;
  cursor: text;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  position: relative;
  border-radius: 4px;
  padding-right: 14px;
}

.emotion-8.Mui-disabled {
  color: rgba(0, 0, 0, 0.38);
  cursor: default;
}

.emotion-8:hover .MuiOutlinedInput-notchedOutline {
  border-color: rgba(0, 0, 0, 0.87);
}

@media (hover: none) {
  .emotion-8:hover .MuiOutlinedInput-notchedOutline {
    border-color: rgba(0, 0, 0, 0.23);
  }
}

.emotion-8.Mui-focused .MuiOutlinedInput-notchedOutline {
  border-color: #1976d2;
  border-width: 2px;
}

.emotion-8.Mui-error .MuiOutlinedInput-notchedOutline {
  border-color: #d32f2f;
}

.emotion-8.Mui-disabled .MuiOutlinedInput-notchedOutline {
  border-color: rgba(0, 0, 0, 0.26);
}

.emotion-9 {
  font: inherit;
  letter-spacing: inherit;
  color: currentColor;
  padding: 4px 0 5px;
  border: 0;
  box-sizing: content-box;
  background: none;
  height: 1.4375em;
  margin: 0;
  -webkit-tap-highlight-color: transparent;
  display: block;
  min-width: 0;
  width: 100%;
  -webkit-animation-name: mui-auto-fill-cancel;
  animation-name: mui-auto-fill-cancel;
  -webkit-animation-duration: 10ms;
  animation-duration: 10ms;
  padding-top: 1px;
  padding: 8.5px 14px;
  padding-right: 0;
}

.emotion-9::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.emotion-9::-moz-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.emotion-9:-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.emotion-9::-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.emotion-9:focus {
  outline: 0;
}

.emotion-9:invalid {
  box-shadow: none;
}

.emotion-9::-webkit-search-decoration {
  -webkit-appearance: none;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9::-webkit-input-placeholder {
  opacity: 0!important;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9::-moz-placeholder {
  opacity: 0!important;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9:-ms-input-placeholder {
  opacity: 0!important;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9::-ms-input-placeholder {
  opacity: 0!important;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9:focus::-webkit-input-placeholder {
  opacity: 0.42;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9:focus::-moz-placeholder {
  opacity: 0.42;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9:focus:-ms-input-placeholder {
  opacity: 0.42;
}

label[data-shrink=false]+.MuiInputBase-formControl .emotion-9:focus::-ms-input-placeholder {
  opacity: 0.42;
}

.emotion-9.Mui-disabled {
  opacity: 1;
  -webkit-text-fill-color: rgba(0, 0, 0, 0.38);
}

.emotion-9:-webkit-autofill {
  -webkit-animation-duration: 5000s;
  animation-duration: 5000s;
  -webkit-animation-name: mui-auto-fill;
  animation-name: mui-auto-fill;
}

.emotion-9:-webkit-autofill {
  border-radius: inherit;
}

.emotion-10 {
  position: absolute;
  right: 0;
  top: calc(50% - 14px);
}

.emotion-11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  background-color: transparent;
  outline: 0;
  border: 0;
  margin: 0;
  border-radius: 0;
  padding: 0;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  -moz-appearance: none;
  -webkit-appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
  text-align: center;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 1.5rem;
  padding: 8px;
  border-radius: 50%;
  overflow: visible;
  color: rgba(0, 0, 0, 0.54);
  -webkit-transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  padding: 2px;
  margin-right: -2px;
}

.emotion-11::-moz-focus-inner {
  border-style: none;
}

.emotion-11.Mui-disabled {
  pointer-events: none;
  cursor: default;
}

@media print {
  .emotion-11 {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }
}

.emotion-11:hover {
  background-color: rgba(0, 0, 0, 0.04);
}

@media (hover: none) {
  .emotion-11:hover {
    background-color: transparent;
  }
}

.emotion-11.Mui-disabled {
  background-color: transparent;
  color: rgba(0, 0, 0, 0.26);
}

.emotion-12 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 1em;
  height: 1em;
  display: inline-block;
  fill: currentColor;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  font-size: 1.5rem;
}

.emotion-13 {
  text-align: left;
  position: absolute;
  bottom: 0;
  right: 0;
  top: -5px;
  left: 0;
  margin: 0;
  padding: 0 8px;
  pointer-events: none;
  border-radius: inherit;
  border-style: solid;
  border-width: 1px;
  overflow: hidden;
  min-width: 0%;
  border-color: rgba(0, 0, 0, 0.23);
}

.emotion-14 {
  float: unset;
  overflow: hidden;
  display: block;
  width: auto;
  padding: 0;
  height: 11px;
  font-size: 0.75em;
  visibility: hidden;
  max-width: 0.01px;
  -webkit-transition: max-width 50ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
  transition: max-width 50ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
  white-space: nowrap;
}

.emotion-14>span {
  padding-left: 5px;
  padding-right: 5px;
  display: inline-block;
}

.emotion-15 {
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.5rem;
  letter-spacing: 0.01071em;
  display: table-cell;
  vertical-align: inherit;
  border-bottom: 1px solid rgba(224, 224, 224, 1);
  text-align: right;
  padding: 0;
  color: rgba(0, 0, 0, 0.87);
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.emotion-16 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  background-color: transparent;
  outline: 0;
  border: 0;
  margin: 0;
  border-radius: 0;
  padding: 0;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  -moz-appearance: none;
  -webkit-appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
  text-align: center;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 1.5rem;
  padding: 8px;
  border-radius: 50%;
  overflow: visible;
  color: rgba(0, 0, 0, 0.54);
  -webkit-transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  padding: 5px;
  font-size: 1.125rem;
}

.emotion-16::-moz-focus-inner {
  border-style: none;
}

.emotion-16.Mui-disabled {
  pointer-events: none;
  cursor: default;
}

@media print {
  .emotion-16 {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }
}

.emotion-16:hover {
  background-color: rgba(0, 0, 0, 0.04);
}

@media (hover: none) {
  .emotion-16:hover {
    background-color: transparent;
  }
}

.emotion-16.Mui-disabled {
  background-color: transparent;
  color: rgba(0, 0, 0, 0.26);
}

.emotion-23 {
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.5rem;
  letter-spacing: 0.01071em;
  display: table-cell;
  vertical-align: inherit;
  border-bottom: 1px solid rgba(224, 224, 224, 1);
  text-align: right;
  padding: 16px;
  color: rgba(0, 0, 0, 0.87);
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.emotion-24 {
  display: table-row-group;
}

.emotion-26 {
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.43;
  letter-spacing: 0.01071em;
  display: table-cell;
  vertical-align: inherit;
  border-bottom: 1px solid rgba(224, 224, 224, 1);
  text-align: left;
  padding: 16px;
  color: rgba(0, 0, 0, 0.87);
}

.emotion-27 {
  font-family: "Roboto","Helvetica","Arial",sans-serif;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.43;
  letter-spacing: 0.01071em;
  display: table-cell;
  vertical-align: inherit;
  border-bottom: 1px solid rgba(224, 224, 224, 1);
  text-align: right;
  padding: 16px;
  color: rgba(0, 0, 0, 0.87);
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.emotion-28 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  background-color: transparent;
  outline: 0;
  border: 0;
  margin: 0;
  border-radius: 0;
  padding: 0;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  -moz-appearance: none;
  -webkit-appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
  padding: 9px;
  border-radius: 50%;
  color: rgba(0, 0, 0, 0.6);
}

.emotion-28::-moz-focus-inner {
  border-style: none;
}

.emotion-28.Mui-disabled {
  pointer-events: none;
  cursor: default;
}

@media print {
  .emotion-28 {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }
}

.emotion-28:hover {
  background-color: rgba(25, 118, 210, 0.04);
}

@media (hover: none) {
  .emotion-28:hover {
    background-color: transparent;
  }
}

.emotion-28.Mui-checked,
.emotion-28.MuiCheckbox-indeterminate {
  color: #1976d2;
}

.emotion-28.Mui-disabled {
  color: rgba(0, 0, 0, 0.26);
}

.emotion-29 {
  cursor: inherit;
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  z-index: 1;
}

<div
  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 MuiTableContainer-root emotion-0"
>
  <table
    aria-label="simple table"
    className="MuiTable-root emotion-1"
    role={null}
  >
    <thead
      className="MuiTableHead-root emotion-2"
      role={null}
    >
      <tr
        className="MuiTableRow-root MuiTableRow-head emotion-3"
        role={null}
      >
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-head MuiTableCell-sizeMedium emotion-4"
          scope="col"
        >
          <div
            aria-owns={null}
            className="MuiAutocomplete-root MuiAutocomplete-hasPopupIcon emotion-5"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            style={
              Object {
                "maxWidth": 350,
                "minWidth": 200,
              }
            }
          >
            <div
              className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root emotion-6"
            >
              <label
                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-sizeSmall MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary emotion-7"
                data-shrink={false}
                htmlFor="permissions-autocomplete"
                id="permissions-autocomplete-label"
              >
                Find a permission
              </label>
              <div
                className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-sizeSmall MuiInputBase-adornedEnd MuiAutocomplete-inputRoot emotion-8"
                onClick={[Function]}
              >
                <input
                  aria-activedescendant={null}
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-invalid={false}
                  autoCapitalize="none"
                  autoComplete="off"
                  autoFocus={false}
                  className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputSizeSmall MuiInputBase-inputAdornedEnd MuiAutocomplete-input MuiAutocomplete-inputFocused emotion-9"
                  disabled={false}
                  id="permissions-autocomplete"
                  onAnimationStart={[Function]}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onMouseDown={[Function]}
                  readOnly={false}
                  required={false}
                  role="combobox"
                  spellCheck="false"
                  type="text"
                  value=""
                />
                <div
                  className="MuiAutocomplete-endAdornment emotion-10"
                >
                  <button
                    aria-label="Open"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium MuiAutocomplete-popupIndicator emotion-11"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={-1}
                    title="Open"
                    type="button"
                  >
                    <svg
                      aria-hidden={true}
                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
                      data-testid="ArrowDropDownIcon"
                      focusable="false"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M7 10l5 5 5-5z"
                      />
                    </svg>
                  </button>
                </div>
                <fieldset
                  aria-hidden={true}
                  className="MuiOutlinedInput-notchedOutline emotion-13"
                >
                  <legend
                    className="emotion-14"
                  >
                    <span>
                      Find a permission
                    </span>
                  </legend>
                </fieldset>
              </div>
            </div>
          </div>
        </th>
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight MuiTableCell-paddingNone MuiTableCell-sizeMedium emotion-15"
          scope="col"
        >
          <button
            aria-label="arrow-backward"
            className="MuiButtonBase-root Mui-disabled MuiIconButton-root Mui-disabled MuiIconButton-sizeSmall emotion-16"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
              data-testid="ArrowBackIosIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z"
              />
            </svg>
          </button>
          <button
            aria-label="arrow-foward"
            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall emotion-16"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
              data-testid="ArrowForwardIosIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z"
              />
            </svg>
          </button>
        </th>
      </tr>
    </thead>
    <thead
      className="MuiTableHead-root emotion-2"
      role={null}
    >
      <tr
        className="MuiTableRow-root MuiTableRow-head emotion-3"
        role={null}
      >
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-head MuiTableCell-sizeMedium emotion-4"
          scope="col"
          style={
            Object {
              "fontSize": "1.1rem",
            }
          }
        >
          Permissions
        </th>
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight MuiTableCell-sizeMedium emotion-23"
          scope="col"
          style={
            Object {
              "fontSize": "1.1rem",
              "width": "140px",
            }
          }
        >
          Admin
        </th>
      </tr>
    </thead>
    <tbody
      className="MuiTableBody-root emotion-24"
      role={null}
    >
      <tr
        className="MuiTableRow-root emotion-3"
        role={null}
      >
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-sizeMedium emotion-26"
          scope="row"
        >
          View Action Items
        </th>
        <td
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight MuiTableCell-sizeMedium emotion-27"
        >
          <span
            className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root Mui-checked emotion-28"
            onBlur={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={null}
          >
            <input
              aria-label="primary checkbox"
              checked={true}
              className="PrivateSwitchBase-input emotion-29"
              data-indeterminate={false}
              onChange={[Function]}
              type="checkbox"
            />
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
              data-testid="CheckBoxIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
              />
            </svg>
          </span>
        </td>
      </tr>
      <tr
        className="MuiTableRow-root emotion-3"
        role={null}
      >
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-sizeMedium emotion-26"
          scope="row"
        >
          Edit Action Items
        </th>
        <td
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight MuiTableCell-sizeMedium emotion-27"
        >
          <span
            className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root Mui-checked emotion-28"
            onBlur={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={null}
          >
            <input
              aria-label="primary checkbox"
              checked={true}
              className="PrivateSwitchBase-input emotion-29"
              data-indeterminate={false}
              onChange={[Function]}
              type="checkbox"
            />
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
              data-testid="CheckBoxIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
              />
            </svg>
          </span>
        </td>
      </tr>
      <tr
        className="MuiTableRow-root emotion-3"
        role={null}
      >
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-sizeMedium emotion-26"
          scope="row"
        >
          Create Action Items
        </th>
        <td
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight MuiTableCell-sizeMedium emotion-27"
        >
          <span
            className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root Mui-checked emotion-28"
            onBlur={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={null}
          >
            <input
              aria-label="primary checkbox"
              checked={true}
              className="PrivateSwitchBase-input emotion-29"
              data-indeterminate={false}
              onChange={[Function]}
              type="checkbox"
            />
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
              data-testid="CheckBoxIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
              />
            </svg>
          </span>
        </td>
      </tr>
      <tr
        className="MuiTableRow-root emotion-3"
        role={null}
      >
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-sizeMedium emotion-26"
          scope="row"
        >
          Add Team Members
        </th>
        <td
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight MuiTableCell-sizeMedium emotion-27"
        >
          <span
            className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root Mui-checked emotion-28"
            onBlur={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={null}
          >
            <input
              aria-label="primary checkbox"
              checked={true}
              className="PrivateSwitchBase-input emotion-29"
              data-indeterminate={false}
              onChange={[Function]}
              type="checkbox"
            />
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
              data-testid="CheckBoxIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
              />
            </svg>
          </span>
        </td>
      </tr>
      <tr
        className="MuiTableRow-root emotion-3"
        role={null}
      >
        <th
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-sizeMedium emotion-26"
          scope="row"
        >
          Delete Team Members
        </th>
        <td
          aria-sort={null}
          className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight MuiTableCell-sizeMedium emotion-27"
        >
          <span
            className="MuiCheckbox-root MuiCheckbox-colorPrimary MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-root Mui-checked emotion-28"
            onBlur={[Function]}
            onContextMenu={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={null}
          >
            <input
              aria-label="primary checkbox"
              checked={true}
              className="PrivateSwitchBase-input emotion-29"
              data-indeterminate={false}
              onChange={[Function]}
              type="checkbox"
            />
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium emotion-12"
              data-testid="CheckBoxIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
              />
            </svg>
          </span>
        </td>
      </tr>
    </tbody>
  </table>
</div>
`;
