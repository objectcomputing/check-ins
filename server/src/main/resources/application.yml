micronaut:
  application:
    name: check-ins
  server:
    cors:
      enabled: true
    max-request-size: 100MB
    multipart:
      max-file-size: 100MB
  caches:
    photo-cache:
      expire-after-write: 86400

  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      default:
        enabled: true
        mapping: "/**"
        paths:
          - "classpath:public" 

  security:
    enabled: true
    authentication: cookie
    oauth2:
      callback-uri: ${ OAUTH_CALLBACK_URI }
      clients:
        google:
          client-id: ${ OAUTH_CLIENT_ID }
          client-secret: ${ OAUTH_CLIENT_SECRET }
          openid:
            issuer: 'https://accounts.google.com'
    endpoints:
      logout:
        get-allowed: true
    intercept-url-map:
      -
        pattern: /**
        http-method: GET
        access:
          - isAuthenticated()
    reject-not-found: false
    redirect:
      prior-to-login: true
      login-success: /
      on-rejection: /oauth/login/google
      unauthorized:
        url: /oauth/login/google
      forbidden:
        url: /forbidden
    session:
      enabled: true
    netty:
      event-loops:
        io:
          num-threads: 3
---
datasources:
  default:
    url: ${JDBC_URL:`jdbc:postgresql:///`}
    driver-class-name: org.postgresql.Driver
    dialect: POSTGRES
    schema-generate: NONE
    maximum-pool-size: 10
---
check-ins:
  application:
    name: "OCI Check-ins"
    google-api:
      delegated-user: ${ GSUITE_SUPER_ADMIN }
      scopes:
        scopeForDriveApi: "https://www.googleapis.com/auth/drive.file"
        scopeForDirectoryApi: "https://www.googleapis.com/auth/admin.directory.user.readonly"
        scopeForChatApi: "https://www.googleapis.com/auth/chat.bot"
    feedback:
      max-suggestions: 6
      notifications:
        subject: "Feedback request"
        content: "You have received a feedback request. Please go to the "
  web-address: ${ WEB_ADDRESS }
---
flyway:
  enabled: enabled
  datasources:
    default:
      locations: "classpath:db/common"
      placeholder-replacement: true
      placeholders:
        aeskey: ${ AES_KEY }
---
service-account-credentials:
  directory_id: ${ DIRECTORY_ID }
  type: ${ TYPE }
  project_id: ${ PROJECT_ID }
  private_key_id: ${ PRIVATE_KEY_ID }
  private_key: ${ PRIVATE_KEY }
  client_email: ${ CLIENT_EMAIL }
  client_id: ${ CLIENT_ID }
  auth_uri: ${ AUTH_URI }
  token_uri: ${ TOKEN_URI }
  auth_provider_x509_cert_url: ${ AUTH_PROVIDER_X509_CERT_URL }
  client_x509_cert_url: ${ CLIENT_X509_CERT_URL }
  oauth_client_id: ${ OAUTH_CLIENT_ID }
  oauth_client_secret: ${ OAUTH_CLIENT_SECRET }
---
ehcache:
  caches:
    photo-cache:
      enabled: true
---
mail-jet:
  from_address: ${ FROM_ADDRESS }
  from_name: ${ FROM_NAME }
---
github-credentials:
  github_token: ${ GITHUB_TOKEN }
