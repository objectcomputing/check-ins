micronaut:
  application:
    name: check-ins
  server:
    cors:
      enabled: true
    max-request-size: 100MB
    multipart:
      max-file-size: 100MB
  caches:
    photo-cache:
      expire-after-write: 1d # 1 day
    member-cache:
      expire-after-write: 300s # 5 minutes
      maximum-size: 600
    role-permission-cache:
      expire-after-write: 1d # 1 day

  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      default:
        enabled: true
        mapping: "/**"
        paths:
          - "classpath:public"

  executors:
    io:
      type: fixed
      n-threads: 40 # Keep in sync with max pool size on datasource

  security:
    enabled: true
    authentication: cookie
    token:
      jwt:
        enabled: true
        generator:
          refresh-token:
            enabled: true
            path: /oauth/access_token
            secret: ${ OAUTH_REFRESH_TOKEN_SECRET:'pleaseChangeThisSecretForANewOne' }
          access-token:
            expiration: 28800
    oauth2:
      callback-uri: ${ OAUTH_CALLBACK_URI }
      clients:
        google:
          client-id: ${ OAUTH_CLIENT_ID }
          client-secret: ${ OAUTH_CLIENT_SECRET }
          openid:
            issuer: 'https://accounts.google.com'
    endpoints:
      logout:
        get-allowed: true
    intercept-url-map:
      -
        pattern: /**
        http-method: GET
        access:
          - isAuthenticated()
    reject-not-found: false
    redirect:
      prior-to-login: true
      login-success: /
      on-rejection: /oauth/login/google
      unauthorized:
        url: /oauth/login/google
      forbidden:
        url: /forbidden
    session:
      enabled: true

---
datasources:
  default:
    url: ${JDBC_URL:`jdbc:postgresql:///`}
    driver-class-name: org.postgresql.Driver
    dialect: POSTGRES
    schema-generate: NONE
    maximum-pool-size: 40
---
check-ins:
  application:
    name: "OCI Check-ins"
    google-api:
      delegated-user: ${ GSUITE_SUPER_ADMIN }
      scopes:
        scope-for-drive-api: "https://www.googleapis.com/auth/drive.file"
        scope-for-directory-api: "https://www.googleapis.com/auth/admin.directory.user.readonly"
    feedback:
      max-suggestions: 6
      request-subject: "Feedback request"
    notifications:
      slack:
        webhook-url: ${ SLACK_WEBHOOK_URL }
        bot-token: ${ SLACK_BOT_TOKEN }
    pulse-response:
      slack:
        signing-secret: ${ SLACK_PULSE_SIGNING_SECRET }
        bot-token: ${ SLACK_PULSE_BOT_TOKEN }
  web-address: ${ WEB_ADDRESS }
---
flyway:
  enabled: enabled
  datasources:
    default:
      locations: "classpath:db/common"
      placeholder-replacement: true
      placeholders:
        aeskey: ${ AES_KEY }
---
service-account-credentials:
  directory-id: ${ DIRECTORY_ID }
  encoded-value: ${SERVICE_ACCOUNT_CREDENTIALS}
---
mail-jet:
  from-address: ${ FROM_ADDRESS }
  from-name: ${ FROM_NAME }
---
github-credentials:
  github-token: ${ GITHUB_TOKEN }
  github-url: "https://api.github.com/"
---
jackson:
  serialization-inclusion: ALWAYS
