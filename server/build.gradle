plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "1.4.2"
    id "idea"
    id "jacoco"
    id "com.palantir.docker-run" version "0.27.0"
}

version "0.5.1"
group "com.objectcomputing.checkins"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.objectcomputing.checkins.*")
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
    publicResources
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.cache:micronaut-cache-ehcache")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")

    testImplementation("org.hamcrest:hamcrest")

    testImplementation("org.mockito:mockito-core")


    //implementation 'org.jetbrains:annotations:19.0.0'
    //annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    //annotationProcessor "io.micronaut:micronaut-inject-java"
    //annotationProcessor "io.micronaut:micronaut-validation"
    //annotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
    //annotationProcessor("io.micronaut.configuration:micronaut-openapi:1.5.1")
    //annotationProcessor("io.micronaut.security:micronaut-security-annotations")

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation "commons-io:commons-io:2.8.0"
    implementation 'org.apache.commons:commons-csv:1.8'

    //implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    //implementation "io.micronaut:micronaut-inject"
    //implementation "io.micronaut:micronaut-validation"
    //implementation "io.micronaut:micronaut-runtime"
    //implementation "io.micronaut:micronaut-http-client"

    implementation "javax.annotation:javax.annotation-api"
    implementation "com.sun.mail:javax.mail:1.6.2"
    implementation "com.mailjet:mailjet-client:4.2.1"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "com.google.api-client:google-api-client:1.30.9"
    implementation "com.google.oauth-client:google-oauth-client-jetty:1.28.0"
    implementation "com.google.apis:google-api-services-drive:v3-rev20200326-1.30.9"
    implementation "com.google.apis:google-api-services-gmail:v1-rev20200203-1.30.9"
    implementation "com.google.apis:google-api-services-admin-directory:directory_v1-rev118-1.25.0"
    implementation "jakarta.persistence:jakarta.persistence-api:2.2.2"
    //implementation "io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion", {
    //    exclude group: 'io.micronaut', module: 'micronaut-jdbc'
    //}
    //implementation  'org.postgresql:postgresql:42.2.12'
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.0.15'
    //implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    //implementation 'io.micronaut.flyway:micronaut-flyway'
    //implementation("io.swagger.core.v3:swagger-annotations")
    //implementation("io.micronaut.security:micronaut-security")
    //implementation "io.micronaut.security:micronaut-security-jwt:$micronautSecurityVersion"
    //implementation "io.micronaut.security:micronaut-security-oauth2:$micronautSecurityVersion"
    //implementation 'io.micronaut.views:micronaut-views-core:2.0.0'
    //implementation "io.micronaut.views:micronaut-views-thymeleaf"
    //implementation "io.micronaut.cache:micronaut-cache-core"
    //implementation "io.micronaut.cache:micronaut-cache-ehcache:$micronautEhcacheVersion"

    //runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    //runtimeOnly "org.fusesource.jansi:jansi:1.18"

    //testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    //testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    //testImplementation 'org.junit.jupiter:junit-jupiter-api'
    //testImplementation 'org.junit.jupiter:junit-jupiter-params'
    //testImplementation 'org.junit.platform:junit-platform-launcher'
    //testImplementation 'org.junit.platform:junit-platform-runner'
    testImplementation 'io.github.bonigarcia:webdrivermanager:4.1.0'
    //testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    //testImplementation "org.junit.jupiter:junit-jupiter-api"
    //testImplementation "io.micronaut.test:micronaut-test-junit5"
    //testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"
    testImplementation "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    //testImplementation(platform("org.testcontainers:testcontainers-bom:1.15.1"))
    //testImplementation "org.testcontainers:testcontainers:1.15.1"
    //testImplementation "org.testcontainers:junit-jupiter:1.15.1"
    //testImplementation("org.testcontainers:postgresql")

    publicResources project(':web-ui')
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop' << '-Dmicronaut.openapi.property.naming.strategy=LOWER_CAMEL_CASE'

    String envStr = System.getenv('MICRONAUT_ENVIRONMENTS')
    List<String> envs = envStr != null ? Arrays.asList(envStr.split(',')) : List.of() as List<String>
    if(!envs.disjoint(List.of("test", "local"))) {
        options.forkOptions.jvmArgs << '-Dmicronaut.openapi.additional.files=src/main/resources/swagger-local'
    } else {
        options.forkOptions.jvmArgs << '-Dmicronaut.openapi.additional.files=src/main/resources/swagger'
    }
}

if(System.getenv("SKIP_WEB_UI") == null) {
    processResources {
        into('public') {
            from configurations.publicResources
        }
    }
}

application {
    mainClass.set("com.objectcomputing.checkins.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Xdebug',"-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n")

dockerRun {
    name 'check-ins-server'
    image 'check-ins-server'
    ports '8080:8080'
    env 'DIRECTORY_ID':'bogus', 'MICRONAUT_ENVIRONMENTS':'integration', 'AES_KEY':'1462A8C8DD3A8FD9484BA067C46A0D22668C48C941EA205411B13C17BA83E58F', 'JDBC_URL':'jdbc:postgresql://172.17.0.1:5432/checkinsdb'
}