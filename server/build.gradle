buildscript{
    dependencies{
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.3'
    }
}

plugins {
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id "idea"
    id "groovy"
}

targetCompatibility = "11"
sourceCompatibility = "11"
archivesBaseName = "check-ins-server"

version "0.1"
group "com.objectcomputing.checkins"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}


configurations {
    // for dependencies that are needed for development only
    developmentOnly
    publicResources
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")    
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
    annotationProcessor("io.micronaut.configuration:micronaut-openapi:1.5.1")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-client"
    implementation "javax.annotation:javax.annotation-api"
    implementation "com.sun.mail:javax.mail:1.6.2"
    implementation "com.mailjet:mailjet-client:4.2.1"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "com.google.api-client:google-api-client:1.30.9"
    implementation "com.google.oauth-client:google-oauth-client-jetty:1.28.0"
    implementation "com.google.apis:google-api-services-drive:v3-rev20200326-1.30.9"
    implementation "com.google.apis:google-api-services-gmail:v1-rev20200203-1.30.9"
    implementation "jakarta.persistence:jakarta.persistence-api:2.2.2"
    implementation "io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion", {
        exclude group: 'io.micronaut', module: 'micronaut-jdbc'
    }
    implementation 'org.postgresql:postgresql:42.2.12'
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.0.15'
    implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    implementation 'io.micronaut.flyway:micronaut-flyway'
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.security:micronaut-security")
    implementation "io.micronaut.security:micronaut-security-jwt:$micronautSecurityVersion"
    implementation "io.micronaut.security:micronaut-security-oauth2:$micronautSecurityVersion"
    implementation 'io.micronaut.views:micronaut-views-core:2.0.0'
    implementation "io.micronaut.views:micronaut-views-thymeleaf"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "org.fusesource.jansi:jansi:1.18"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testCompile 'org.junit.jupiter:junit-jupiter-params'
    testCompile 'org.junit.platform:junit-platform-launcher'
    testCompile 'org.junit.platform:junit-platform-runner'
    testCompile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.1.0'
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"
    testImplementation "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation(platform("org.testcontainers:testcontainers-bom:1.14.3"))
    testCompile "org.testcontainers:testcontainers:1.14.3"
    testCompile "org.testcontainers:junit-jupiter:1.14.3"
    testImplementation("org.testcontainers:postgresql")

    publicResources project(':web-ui')
}

test.classpath += configurations.developmentOnly

mainClassName = "com.objectcomputing.checkins.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop' << '-Dmicronaut.openapi.property.naming.strategy=LOWER_CAMEL_CASE'

    String envStr = System.getenv('MICRONAUT_ENVIRONMENTS')
    List<String> envs = envStr != null ? Arrays.asList(envStr.split(',')) : List.of() as List<String>
    if(envs.contains("test")) {
        options.forkOptions.jvmArgs << '-Dmicronaut.openapi.additional.files=src/main/resources/swagger-test'
    } else if(!envs.contains("local")) {
        options.forkOptions.jvmArgs << '-Dmicronaut.openapi.additional.files=src/main/resources/swagger'
    }
}

if(System.getenv("SKIP_WEB_UI") == null) {
    processResources {
        into('public') {
            from configurations.publicResources
        }
    }
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Xdebug',"-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n")


// deploying to gcp with gradlew
//buildscript{
//    dependencies{
//        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.3'
//    }
//}

apply plugin: 'com.google.cloud.tools.appengine'

appengine {
    stage{
        artifact = 'build/libs/check-ins-server-0.1.jar'
    }
    deploy {
        stopPreviousVersion = true
        promote = true
        project = 'oci-intern-2019'
    }
}
