name: Gradle Build - Feature / Bug
on:
  push:
    branches:
      - 'feature-**/*'
      - 'bugfix-**/*'
      - 'chore-**/*'
      - 'doc-**/*'
      - 'hotfix-**/*'
      - 'dependabot/**/*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gradle package
        run: ./gradlew assemble
      - name: Upload artifact for Gradle package
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: build/libs
  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact for Gradle package
        uses: actions/download-artifact@v2
        with:
          name: package
          path: build/libs
      - name: Gradle runs tests
        run: ./gradlew check
      - name: Upload artifact for test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: server/build/test-results
  sonarqube:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact for Gradle package
        uses: actions/download-artifact@v2
        with:
          name: package
          path: build/libs
      - name: Download artifact for test results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: server/build/test-results
      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'
      - name: Do SonarQube checks
        run: |
          ./gradlew sonarqube -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_URL -Dsonar.login=$TOKEN
          curl -u "${SONAR_TOKEN}:" https://sonarqube.cloudops.objectcomputing.com/api/qualitygates/project_status?projectKey=$SONAR_PROJECT_KEY > result.json
          cat result.json
          if [[ $(jq -r '.projectStatus.status' result.json) = ERROR ]] ; then exit 1;fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_PROJECT_KEY: oci-checkins
          SONAR_URL: https://sonarqube.cloudops.objectcomputing.com
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
